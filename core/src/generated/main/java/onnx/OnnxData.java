// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx/onnx-data.proto

package onnx;

public final class OnnxData {
  private OnnxData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SequenceProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.SequenceProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The data type of the element.
     * This field MUST have a valid SequenceProto.DataType value
     * </pre>
     *
     * <code>int32 elem_type = 2;</code>
     * @return The elemType.
     */
    int getElemType();

    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    java.util.List<onnx.Onnx.TensorProto> 
        getTensorValuesList();
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    onnx.Onnx.TensorProto getTensorValues(int index);
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    int getTensorValuesCount();
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    java.util.List<? extends onnx.Onnx.TensorProtoOrBuilder> 
        getTensorValuesOrBuilderList();
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    onnx.Onnx.TensorProtoOrBuilder getTensorValuesOrBuilder(
        int index);

    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    java.util.List<onnx.Onnx.SparseTensorProto> 
        getSparseTensorValuesList();
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    onnx.Onnx.SparseTensorProto getSparseTensorValues(int index);
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    int getSparseTensorValuesCount();
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    java.util.List<? extends onnx.Onnx.SparseTensorProtoOrBuilder> 
        getSparseTensorValuesOrBuilderList();
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    onnx.Onnx.SparseTensorProtoOrBuilder getSparseTensorValuesOrBuilder(
        int index);

    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    java.util.List<onnx.OnnxData.SequenceProto> 
        getSequenceValuesList();
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    onnx.OnnxData.SequenceProto getSequenceValues(int index);
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    int getSequenceValuesCount();
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    java.util.List<? extends onnx.OnnxData.SequenceProtoOrBuilder> 
        getSequenceValuesOrBuilderList();
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    onnx.OnnxData.SequenceProtoOrBuilder getSequenceValuesOrBuilder(
        int index);

    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    java.util.List<onnx.OnnxData.MapProto> 
        getMapValuesList();
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    onnx.OnnxData.MapProto getMapValues(int index);
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    int getMapValuesCount();
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    java.util.List<? extends onnx.OnnxData.MapProtoOrBuilder> 
        getMapValuesOrBuilderList();
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    onnx.OnnxData.MapProtoOrBuilder getMapValuesOrBuilder(
        int index);

    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    java.util.List<onnx.OnnxData.OptionalProto> 
        getOptionalValuesList();
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    onnx.OnnxData.OptionalProto getOptionalValues(int index);
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    int getOptionalValuesCount();
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    java.util.List<? extends onnx.OnnxData.OptionalProtoOrBuilder> 
        getOptionalValuesOrBuilderList();
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    onnx.OnnxData.OptionalProtoOrBuilder getOptionalValuesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Sequences
   * Defines a dense, ordered, collection of elements that are of homogeneous types.
   * Sequences can be made out of tensors, maps, or sequences.
   * If a sequence is made out of tensors, the tensors must have the same element
   * type (i.e. int32). In some cases, the tensors in a sequence can have different
   * shapes.  Whether the tensors can have different shapes or not depends on the
   * type/shape associated with the corresponding "ValueInfo". For example,
   * "Sequence&lt;Tensor&lt;float, [M,N]&gt;" means that all tensors have same shape. However,
   * "Sequence&lt;Tensor&lt;float, [omitted,omitted]&gt;" means they can have different
   * shapes (all of rank 2), where "omitted" means the corresponding dimension has
   * no symbolic/constant value. Finally, "Sequence&lt;Tensor&lt;float, omitted&gt;&gt;" means
   * that the different tensors can have different ranks, when the "shape" itself
   * is omitted from the tensor-type. For a more complete description, refer to
   * https://github.com/onnx/onnx/blob/master/docs/IR.md#static-tensor-shapes.
   * </pre>
   *
   * Protobuf type {@code onnx.SequenceProto}
   */
  public static final class SequenceProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.SequenceProto)
      SequenceProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SequenceProto.newBuilder() to construct.
    private SequenceProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SequenceProto() {
      name_ = "";
      tensorValues_ = java.util.Collections.emptyList();
      sparseTensorValues_ = java.util.Collections.emptyList();
      sequenceValues_ = java.util.Collections.emptyList();
      mapValues_ = java.util.Collections.emptyList();
      optionalValues_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SequenceProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SequenceProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              elemType_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tensorValues_ = new java.util.ArrayList<onnx.Onnx.TensorProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              tensorValues_.add(
                  input.readMessage(onnx.Onnx.TensorProto.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                sparseTensorValues_ = new java.util.ArrayList<onnx.Onnx.SparseTensorProto>();
                mutable_bitField0_ |= 0x00000002;
              }
              sparseTensorValues_.add(
                  input.readMessage(onnx.Onnx.SparseTensorProto.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                sequenceValues_ = new java.util.ArrayList<onnx.OnnxData.SequenceProto>();
                mutable_bitField0_ |= 0x00000004;
              }
              sequenceValues_.add(
                  input.readMessage(onnx.OnnxData.SequenceProto.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                mapValues_ = new java.util.ArrayList<onnx.OnnxData.MapProto>();
                mutable_bitField0_ |= 0x00000008;
              }
              mapValues_.add(
                  input.readMessage(onnx.OnnxData.MapProto.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                optionalValues_ = new java.util.ArrayList<onnx.OnnxData.OptionalProto>();
                mutable_bitField0_ |= 0x00000010;
              }
              optionalValues_.add(
                  input.readMessage(onnx.OnnxData.OptionalProto.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tensorValues_ = java.util.Collections.unmodifiableList(tensorValues_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          sparseTensorValues_ = java.util.Collections.unmodifiableList(sparseTensorValues_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          sequenceValues_ = java.util.Collections.unmodifiableList(sequenceValues_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          mapValues_ = java.util.Collections.unmodifiableList(mapValues_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          optionalValues_ = java.util.Collections.unmodifiableList(optionalValues_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxData.internal_static_onnx_SequenceProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxData.internal_static_onnx_SequenceProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxData.SequenceProto.class, onnx.OnnxData.SequenceProto.Builder.class);
    }

    /**
     * Protobuf enum {@code onnx.SequenceProto.DataType}
     */
    public enum DataType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>TENSOR = 1;</code>
       */
      TENSOR(1),
      /**
       * <code>SPARSE_TENSOR = 2;</code>
       */
      SPARSE_TENSOR(2),
      /**
       * <code>SEQUENCE = 3;</code>
       */
      SEQUENCE(3),
      /**
       * <code>MAP = 4;</code>
       */
      MAP(4),
      /**
       * <code>OPTIONAL = 5;</code>
       */
      OPTIONAL(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>TENSOR = 1;</code>
       */
      public static final int TENSOR_VALUE = 1;
      /**
       * <code>SPARSE_TENSOR = 2;</code>
       */
      public static final int SPARSE_TENSOR_VALUE = 2;
      /**
       * <code>SEQUENCE = 3;</code>
       */
      public static final int SEQUENCE_VALUE = 3;
      /**
       * <code>MAP = 4;</code>
       */
      public static final int MAP_VALUE = 4;
      /**
       * <code>OPTIONAL = 5;</code>
       */
      public static final int OPTIONAL_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DataType forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return TENSOR;
          case 2: return SPARSE_TENSOR;
          case 3: return SEQUENCE;
          case 4: return MAP;
          case 5: return OPTIONAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DataType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
              public DataType findValueByNumber(int number) {
                return DataType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return onnx.OnnxData.SequenceProto.getDescriptor().getEnumTypes().get(0);
      }

      private static final DataType[] VALUES = values();

      public static DataType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DataType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:onnx.SequenceProto.DataType)
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ELEM_TYPE_FIELD_NUMBER = 2;
    private int elemType_;
    /**
     * <pre>
     * The data type of the element.
     * This field MUST have a valid SequenceProto.DataType value
     * </pre>
     *
     * <code>int32 elem_type = 2;</code>
     * @return The elemType.
     */
    @java.lang.Override
    public int getElemType() {
      return elemType_;
    }

    public static final int TENSOR_VALUES_FIELD_NUMBER = 3;
    private java.util.List<onnx.Onnx.TensorProto> tensorValues_;
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    @java.lang.Override
    public java.util.List<onnx.Onnx.TensorProto> getTensorValuesList() {
      return tensorValues_;
    }
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends onnx.Onnx.TensorProtoOrBuilder> 
        getTensorValuesOrBuilderList() {
      return tensorValues_;
    }
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    @java.lang.Override
    public int getTensorValuesCount() {
      return tensorValues_.size();
    }
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    @java.lang.Override
    public onnx.Onnx.TensorProto getTensorValues(int index) {
      return tensorValues_.get(index);
    }
    /**
     * <pre>
     * For TensorProto values.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
     */
    @java.lang.Override
    public onnx.Onnx.TensorProtoOrBuilder getTensorValuesOrBuilder(
        int index) {
      return tensorValues_.get(index);
    }

    public static final int SPARSE_TENSOR_VALUES_FIELD_NUMBER = 4;
    private java.util.List<onnx.Onnx.SparseTensorProto> sparseTensorValues_;
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    @java.lang.Override
    public java.util.List<onnx.Onnx.SparseTensorProto> getSparseTensorValuesList() {
      return sparseTensorValues_;
    }
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends onnx.Onnx.SparseTensorProtoOrBuilder> 
        getSparseTensorValuesOrBuilderList() {
      return sparseTensorValues_;
    }
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    @java.lang.Override
    public int getSparseTensorValuesCount() {
      return sparseTensorValues_.size();
    }
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    @java.lang.Override
    public onnx.Onnx.SparseTensorProto getSparseTensorValues(int index) {
      return sparseTensorValues_.get(index);
    }
    /**
     * <pre>
     * For SparseTensorProto values.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
     */
    @java.lang.Override
    public onnx.Onnx.SparseTensorProtoOrBuilder getSparseTensorValuesOrBuilder(
        int index) {
      return sparseTensorValues_.get(index);
    }

    public static final int SEQUENCE_VALUES_FIELD_NUMBER = 5;
    private java.util.List<onnx.OnnxData.SequenceProto> sequenceValues_;
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    @java.lang.Override
    public java.util.List<onnx.OnnxData.SequenceProto> getSequenceValuesList() {
      return sequenceValues_;
    }
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends onnx.OnnxData.SequenceProtoOrBuilder> 
        getSequenceValuesOrBuilderList() {
      return sequenceValues_;
    }
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    @java.lang.Override
    public int getSequenceValuesCount() {
      return sequenceValues_.size();
    }
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.SequenceProto getSequenceValues(int index) {
      return sequenceValues_.get(index);
    }
    /**
     * <pre>
     * For SequenceProto values, allowing sequences to be of themselves.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.SequenceProtoOrBuilder getSequenceValuesOrBuilder(
        int index) {
      return sequenceValues_.get(index);
    }

    public static final int MAP_VALUES_FIELD_NUMBER = 6;
    private java.util.List<onnx.OnnxData.MapProto> mapValues_;
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    @java.lang.Override
    public java.util.List<onnx.OnnxData.MapProto> getMapValuesList() {
      return mapValues_;
    }
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends onnx.OnnxData.MapProtoOrBuilder> 
        getMapValuesOrBuilderList() {
      return mapValues_;
    }
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    @java.lang.Override
    public int getMapValuesCount() {
      return mapValues_.size();
    }
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.MapProto getMapValues(int index) {
      return mapValues_.get(index);
    }
    /**
     * <pre>
     * For MapProto values.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>repeated .onnx.MapProto map_values = 6;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.MapProtoOrBuilder getMapValuesOrBuilder(
        int index) {
      return mapValues_.get(index);
    }

    public static final int OPTIONAL_VALUES_FIELD_NUMBER = 7;
    private java.util.List<onnx.OnnxData.OptionalProto> optionalValues_;
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    @java.lang.Override
    public java.util.List<onnx.OnnxData.OptionalProto> getOptionalValuesList() {
      return optionalValues_;
    }
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends onnx.OnnxData.OptionalProtoOrBuilder> 
        getOptionalValuesOrBuilderList() {
      return optionalValues_;
    }
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    @java.lang.Override
    public int getOptionalValuesCount() {
      return optionalValues_.size();
    }
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.OptionalProto getOptionalValues(int index) {
      return optionalValues_.get(index);
    }
    /**
     * <pre>
     * For OptionalProto values.
     * When this field is present, the elem_type field MUST be Optional.
     * </pre>
     *
     * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.OptionalProtoOrBuilder getOptionalValuesOrBuilder(
        int index) {
      return optionalValues_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (elemType_ != 0) {
        output.writeInt32(2, elemType_);
      }
      for (int i = 0; i < tensorValues_.size(); i++) {
        output.writeMessage(3, tensorValues_.get(i));
      }
      for (int i = 0; i < sparseTensorValues_.size(); i++) {
        output.writeMessage(4, sparseTensorValues_.get(i));
      }
      for (int i = 0; i < sequenceValues_.size(); i++) {
        output.writeMessage(5, sequenceValues_.get(i));
      }
      for (int i = 0; i < mapValues_.size(); i++) {
        output.writeMessage(6, mapValues_.get(i));
      }
      for (int i = 0; i < optionalValues_.size(); i++) {
        output.writeMessage(7, optionalValues_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (elemType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, elemType_);
      }
      for (int i = 0; i < tensorValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tensorValues_.get(i));
      }
      for (int i = 0; i < sparseTensorValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sparseTensorValues_.get(i));
      }
      for (int i = 0; i < sequenceValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sequenceValues_.get(i));
      }
      for (int i = 0; i < mapValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, mapValues_.get(i));
      }
      for (int i = 0; i < optionalValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, optionalValues_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxData.SequenceProto)) {
        return super.equals(obj);
      }
      onnx.OnnxData.SequenceProto other = (onnx.OnnxData.SequenceProto) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getElemType()
          != other.getElemType()) return false;
      if (!getTensorValuesList()
          .equals(other.getTensorValuesList())) return false;
      if (!getSparseTensorValuesList()
          .equals(other.getSparseTensorValuesList())) return false;
      if (!getSequenceValuesList()
          .equals(other.getSequenceValuesList())) return false;
      if (!getMapValuesList()
          .equals(other.getMapValuesList())) return false;
      if (!getOptionalValuesList()
          .equals(other.getOptionalValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ELEM_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getElemType();
      if (getTensorValuesCount() > 0) {
        hash = (37 * hash) + TENSOR_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getTensorValuesList().hashCode();
      }
      if (getSparseTensorValuesCount() > 0) {
        hash = (37 * hash) + SPARSE_TENSOR_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getSparseTensorValuesList().hashCode();
      }
      if (getSequenceValuesCount() > 0) {
        hash = (37 * hash) + SEQUENCE_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceValuesList().hashCode();
      }
      if (getMapValuesCount() > 0) {
        hash = (37 * hash) + MAP_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getMapValuesList().hashCode();
      }
      if (getOptionalValuesCount() > 0) {
        hash = (37 * hash) + OPTIONAL_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getOptionalValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxData.SequenceProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxData.SequenceProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.SequenceProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.SequenceProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxData.SequenceProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Sequences
     * Defines a dense, ordered, collection of elements that are of homogeneous types.
     * Sequences can be made out of tensors, maps, or sequences.
     * If a sequence is made out of tensors, the tensors must have the same element
     * type (i.e. int32). In some cases, the tensors in a sequence can have different
     * shapes.  Whether the tensors can have different shapes or not depends on the
     * type/shape associated with the corresponding "ValueInfo". For example,
     * "Sequence&lt;Tensor&lt;float, [M,N]&gt;" means that all tensors have same shape. However,
     * "Sequence&lt;Tensor&lt;float, [omitted,omitted]&gt;" means they can have different
     * shapes (all of rank 2), where "omitted" means the corresponding dimension has
     * no symbolic/constant value. Finally, "Sequence&lt;Tensor&lt;float, omitted&gt;&gt;" means
     * that the different tensors can have different ranks, when the "shape" itself
     * is omitted from the tensor-type. For a more complete description, refer to
     * https://github.com/onnx/onnx/blob/master/docs/IR.md#static-tensor-shapes.
     * </pre>
     *
     * Protobuf type {@code onnx.SequenceProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.SequenceProto)
        onnx.OnnxData.SequenceProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxData.internal_static_onnx_SequenceProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxData.internal_static_onnx_SequenceProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxData.SequenceProto.class, onnx.OnnxData.SequenceProto.Builder.class);
      }

      // Construct using onnx.OnnxData.SequenceProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTensorValuesFieldBuilder();
          getSparseTensorValuesFieldBuilder();
          getSequenceValuesFieldBuilder();
          getMapValuesFieldBuilder();
          getOptionalValuesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        elemType_ = 0;

        if (tensorValuesBuilder_ == null) {
          tensorValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tensorValuesBuilder_.clear();
        }
        if (sparseTensorValuesBuilder_ == null) {
          sparseTensorValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sparseTensorValuesBuilder_.clear();
        }
        if (sequenceValuesBuilder_ == null) {
          sequenceValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          sequenceValuesBuilder_.clear();
        }
        if (mapValuesBuilder_ == null) {
          mapValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          mapValuesBuilder_.clear();
        }
        if (optionalValuesBuilder_ == null) {
          optionalValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          optionalValuesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxData.internal_static_onnx_SequenceProto_descriptor;
      }

      @java.lang.Override
      public onnx.OnnxData.SequenceProto getDefaultInstanceForType() {
        return onnx.OnnxData.SequenceProto.getDefaultInstance();
      }

      @java.lang.Override
      public onnx.OnnxData.SequenceProto build() {
        onnx.OnnxData.SequenceProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public onnx.OnnxData.SequenceProto buildPartial() {
        onnx.OnnxData.SequenceProto result = new onnx.OnnxData.SequenceProto(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.elemType_ = elemType_;
        if (tensorValuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tensorValues_ = java.util.Collections.unmodifiableList(tensorValues_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tensorValues_ = tensorValues_;
        } else {
          result.tensorValues_ = tensorValuesBuilder_.build();
        }
        if (sparseTensorValuesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            sparseTensorValues_ = java.util.Collections.unmodifiableList(sparseTensorValues_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sparseTensorValues_ = sparseTensorValues_;
        } else {
          result.sparseTensorValues_ = sparseTensorValuesBuilder_.build();
        }
        if (sequenceValuesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            sequenceValues_ = java.util.Collections.unmodifiableList(sequenceValues_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.sequenceValues_ = sequenceValues_;
        } else {
          result.sequenceValues_ = sequenceValuesBuilder_.build();
        }
        if (mapValuesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            mapValues_ = java.util.Collections.unmodifiableList(mapValues_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.mapValues_ = mapValues_;
        } else {
          result.mapValues_ = mapValuesBuilder_.build();
        }
        if (optionalValuesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            optionalValues_ = java.util.Collections.unmodifiableList(optionalValues_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.optionalValues_ = optionalValues_;
        } else {
          result.optionalValues_ = optionalValuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxData.SequenceProto) {
          return mergeFrom((onnx.OnnxData.SequenceProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxData.SequenceProto other) {
        if (other == onnx.OnnxData.SequenceProto.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getElemType() != 0) {
          setElemType(other.getElemType());
        }
        if (tensorValuesBuilder_ == null) {
          if (!other.tensorValues_.isEmpty()) {
            if (tensorValues_.isEmpty()) {
              tensorValues_ = other.tensorValues_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTensorValuesIsMutable();
              tensorValues_.addAll(other.tensorValues_);
            }
            onChanged();
          }
        } else {
          if (!other.tensorValues_.isEmpty()) {
            if (tensorValuesBuilder_.isEmpty()) {
              tensorValuesBuilder_.dispose();
              tensorValuesBuilder_ = null;
              tensorValues_ = other.tensorValues_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tensorValuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTensorValuesFieldBuilder() : null;
            } else {
              tensorValuesBuilder_.addAllMessages(other.tensorValues_);
            }
          }
        }
        if (sparseTensorValuesBuilder_ == null) {
          if (!other.sparseTensorValues_.isEmpty()) {
            if (sparseTensorValues_.isEmpty()) {
              sparseTensorValues_ = other.sparseTensorValues_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSparseTensorValuesIsMutable();
              sparseTensorValues_.addAll(other.sparseTensorValues_);
            }
            onChanged();
          }
        } else {
          if (!other.sparseTensorValues_.isEmpty()) {
            if (sparseTensorValuesBuilder_.isEmpty()) {
              sparseTensorValuesBuilder_.dispose();
              sparseTensorValuesBuilder_ = null;
              sparseTensorValues_ = other.sparseTensorValues_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sparseTensorValuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSparseTensorValuesFieldBuilder() : null;
            } else {
              sparseTensorValuesBuilder_.addAllMessages(other.sparseTensorValues_);
            }
          }
        }
        if (sequenceValuesBuilder_ == null) {
          if (!other.sequenceValues_.isEmpty()) {
            if (sequenceValues_.isEmpty()) {
              sequenceValues_ = other.sequenceValues_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSequenceValuesIsMutable();
              sequenceValues_.addAll(other.sequenceValues_);
            }
            onChanged();
          }
        } else {
          if (!other.sequenceValues_.isEmpty()) {
            if (sequenceValuesBuilder_.isEmpty()) {
              sequenceValuesBuilder_.dispose();
              sequenceValuesBuilder_ = null;
              sequenceValues_ = other.sequenceValues_;
              bitField0_ = (bitField0_ & ~0x00000004);
              sequenceValuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSequenceValuesFieldBuilder() : null;
            } else {
              sequenceValuesBuilder_.addAllMessages(other.sequenceValues_);
            }
          }
        }
        if (mapValuesBuilder_ == null) {
          if (!other.mapValues_.isEmpty()) {
            if (mapValues_.isEmpty()) {
              mapValues_ = other.mapValues_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMapValuesIsMutable();
              mapValues_.addAll(other.mapValues_);
            }
            onChanged();
          }
        } else {
          if (!other.mapValues_.isEmpty()) {
            if (mapValuesBuilder_.isEmpty()) {
              mapValuesBuilder_.dispose();
              mapValuesBuilder_ = null;
              mapValues_ = other.mapValues_;
              bitField0_ = (bitField0_ & ~0x00000008);
              mapValuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMapValuesFieldBuilder() : null;
            } else {
              mapValuesBuilder_.addAllMessages(other.mapValues_);
            }
          }
        }
        if (optionalValuesBuilder_ == null) {
          if (!other.optionalValues_.isEmpty()) {
            if (optionalValues_.isEmpty()) {
              optionalValues_ = other.optionalValues_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOptionalValuesIsMutable();
              optionalValues_.addAll(other.optionalValues_);
            }
            onChanged();
          }
        } else {
          if (!other.optionalValues_.isEmpty()) {
            if (optionalValuesBuilder_.isEmpty()) {
              optionalValuesBuilder_.dispose();
              optionalValuesBuilder_ = null;
              optionalValues_ = other.optionalValues_;
              bitField0_ = (bitField0_ & ~0x00000010);
              optionalValuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOptionalValuesFieldBuilder() : null;
            } else {
              optionalValuesBuilder_.addAllMessages(other.optionalValues_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxData.SequenceProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxData.SequenceProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int elemType_ ;
      /**
       * <pre>
       * The data type of the element.
       * This field MUST have a valid SequenceProto.DataType value
       * </pre>
       *
       * <code>int32 elem_type = 2;</code>
       * @return The elemType.
       */
      @java.lang.Override
      public int getElemType() {
        return elemType_;
      }
      /**
       * <pre>
       * The data type of the element.
       * This field MUST have a valid SequenceProto.DataType value
       * </pre>
       *
       * <code>int32 elem_type = 2;</code>
       * @param value The elemType to set.
       * @return This builder for chaining.
       */
      public Builder setElemType(int value) {
        
        elemType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data type of the element.
       * This field MUST have a valid SequenceProto.DataType value
       * </pre>
       *
       * <code>int32 elem_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearElemType() {
        
        elemType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<onnx.Onnx.TensorProto> tensorValues_ =
        java.util.Collections.emptyList();
      private void ensureTensorValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tensorValues_ = new java.util.ArrayList<onnx.Onnx.TensorProto>(tensorValues_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.Onnx.TensorProto, onnx.Onnx.TensorProto.Builder, onnx.Onnx.TensorProtoOrBuilder> tensorValuesBuilder_;

      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public java.util.List<onnx.Onnx.TensorProto> getTensorValuesList() {
        if (tensorValuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tensorValues_);
        } else {
          return tensorValuesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public int getTensorValuesCount() {
        if (tensorValuesBuilder_ == null) {
          return tensorValues_.size();
        } else {
          return tensorValuesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public onnx.Onnx.TensorProto getTensorValues(int index) {
        if (tensorValuesBuilder_ == null) {
          return tensorValues_.get(index);
        } else {
          return tensorValuesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder setTensorValues(
          int index, onnx.Onnx.TensorProto value) {
        if (tensorValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTensorValuesIsMutable();
          tensorValues_.set(index, value);
          onChanged();
        } else {
          tensorValuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder setTensorValues(
          int index, onnx.Onnx.TensorProto.Builder builderForValue) {
        if (tensorValuesBuilder_ == null) {
          ensureTensorValuesIsMutable();
          tensorValues_.set(index, builderForValue.build());
          onChanged();
        } else {
          tensorValuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder addTensorValues(onnx.Onnx.TensorProto value) {
        if (tensorValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTensorValuesIsMutable();
          tensorValues_.add(value);
          onChanged();
        } else {
          tensorValuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder addTensorValues(
          int index, onnx.Onnx.TensorProto value) {
        if (tensorValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTensorValuesIsMutable();
          tensorValues_.add(index, value);
          onChanged();
        } else {
          tensorValuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder addTensorValues(
          onnx.Onnx.TensorProto.Builder builderForValue) {
        if (tensorValuesBuilder_ == null) {
          ensureTensorValuesIsMutable();
          tensorValues_.add(builderForValue.build());
          onChanged();
        } else {
          tensorValuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder addTensorValues(
          int index, onnx.Onnx.TensorProto.Builder builderForValue) {
        if (tensorValuesBuilder_ == null) {
          ensureTensorValuesIsMutable();
          tensorValues_.add(index, builderForValue.build());
          onChanged();
        } else {
          tensorValuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder addAllTensorValues(
          java.lang.Iterable<? extends onnx.Onnx.TensorProto> values) {
        if (tensorValuesBuilder_ == null) {
          ensureTensorValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tensorValues_);
          onChanged();
        } else {
          tensorValuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder clearTensorValues() {
        if (tensorValuesBuilder_ == null) {
          tensorValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tensorValuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public Builder removeTensorValues(int index) {
        if (tensorValuesBuilder_ == null) {
          ensureTensorValuesIsMutable();
          tensorValues_.remove(index);
          onChanged();
        } else {
          tensorValuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public onnx.Onnx.TensorProto.Builder getTensorValuesBuilder(
          int index) {
        return getTensorValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public onnx.Onnx.TensorProtoOrBuilder getTensorValuesOrBuilder(
          int index) {
        if (tensorValuesBuilder_ == null) {
          return tensorValues_.get(index);  } else {
          return tensorValuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public java.util.List<? extends onnx.Onnx.TensorProtoOrBuilder> 
           getTensorValuesOrBuilderList() {
        if (tensorValuesBuilder_ != null) {
          return tensorValuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tensorValues_);
        }
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public onnx.Onnx.TensorProto.Builder addTensorValuesBuilder() {
        return getTensorValuesFieldBuilder().addBuilder(
            onnx.Onnx.TensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public onnx.Onnx.TensorProto.Builder addTensorValuesBuilder(
          int index) {
        return getTensorValuesFieldBuilder().addBuilder(
            index, onnx.Onnx.TensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For TensorProto values.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensor_values = 3;</code>
       */
      public java.util.List<onnx.Onnx.TensorProto.Builder> 
           getTensorValuesBuilderList() {
        return getTensorValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.Onnx.TensorProto, onnx.Onnx.TensorProto.Builder, onnx.Onnx.TensorProtoOrBuilder> 
          getTensorValuesFieldBuilder() {
        if (tensorValuesBuilder_ == null) {
          tensorValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.Onnx.TensorProto, onnx.Onnx.TensorProto.Builder, onnx.Onnx.TensorProtoOrBuilder>(
                  tensorValues_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tensorValues_ = null;
        }
        return tensorValuesBuilder_;
      }

      private java.util.List<onnx.Onnx.SparseTensorProto> sparseTensorValues_ =
        java.util.Collections.emptyList();
      private void ensureSparseTensorValuesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          sparseTensorValues_ = new java.util.ArrayList<onnx.Onnx.SparseTensorProto>(sparseTensorValues_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.Onnx.SparseTensorProto, onnx.Onnx.SparseTensorProto.Builder, onnx.Onnx.SparseTensorProtoOrBuilder> sparseTensorValuesBuilder_;

      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public java.util.List<onnx.Onnx.SparseTensorProto> getSparseTensorValuesList() {
        if (sparseTensorValuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sparseTensorValues_);
        } else {
          return sparseTensorValuesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public int getSparseTensorValuesCount() {
        if (sparseTensorValuesBuilder_ == null) {
          return sparseTensorValues_.size();
        } else {
          return sparseTensorValuesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public onnx.Onnx.SparseTensorProto getSparseTensorValues(int index) {
        if (sparseTensorValuesBuilder_ == null) {
          return sparseTensorValues_.get(index);
        } else {
          return sparseTensorValuesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder setSparseTensorValues(
          int index, onnx.Onnx.SparseTensorProto value) {
        if (sparseTensorValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSparseTensorValuesIsMutable();
          sparseTensorValues_.set(index, value);
          onChanged();
        } else {
          sparseTensorValuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder setSparseTensorValues(
          int index, onnx.Onnx.SparseTensorProto.Builder builderForValue) {
        if (sparseTensorValuesBuilder_ == null) {
          ensureSparseTensorValuesIsMutable();
          sparseTensorValues_.set(index, builderForValue.build());
          onChanged();
        } else {
          sparseTensorValuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder addSparseTensorValues(onnx.Onnx.SparseTensorProto value) {
        if (sparseTensorValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSparseTensorValuesIsMutable();
          sparseTensorValues_.add(value);
          onChanged();
        } else {
          sparseTensorValuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder addSparseTensorValues(
          int index, onnx.Onnx.SparseTensorProto value) {
        if (sparseTensorValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSparseTensorValuesIsMutable();
          sparseTensorValues_.add(index, value);
          onChanged();
        } else {
          sparseTensorValuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder addSparseTensorValues(
          onnx.Onnx.SparseTensorProto.Builder builderForValue) {
        if (sparseTensorValuesBuilder_ == null) {
          ensureSparseTensorValuesIsMutable();
          sparseTensorValues_.add(builderForValue.build());
          onChanged();
        } else {
          sparseTensorValuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder addSparseTensorValues(
          int index, onnx.Onnx.SparseTensorProto.Builder builderForValue) {
        if (sparseTensorValuesBuilder_ == null) {
          ensureSparseTensorValuesIsMutable();
          sparseTensorValues_.add(index, builderForValue.build());
          onChanged();
        } else {
          sparseTensorValuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder addAllSparseTensorValues(
          java.lang.Iterable<? extends onnx.Onnx.SparseTensorProto> values) {
        if (sparseTensorValuesBuilder_ == null) {
          ensureSparseTensorValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sparseTensorValues_);
          onChanged();
        } else {
          sparseTensorValuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder clearSparseTensorValues() {
        if (sparseTensorValuesBuilder_ == null) {
          sparseTensorValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sparseTensorValuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public Builder removeSparseTensorValues(int index) {
        if (sparseTensorValuesBuilder_ == null) {
          ensureSparseTensorValuesIsMutable();
          sparseTensorValues_.remove(index);
          onChanged();
        } else {
          sparseTensorValuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public onnx.Onnx.SparseTensorProto.Builder getSparseTensorValuesBuilder(
          int index) {
        return getSparseTensorValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public onnx.Onnx.SparseTensorProtoOrBuilder getSparseTensorValuesOrBuilder(
          int index) {
        if (sparseTensorValuesBuilder_ == null) {
          return sparseTensorValues_.get(index);  } else {
          return sparseTensorValuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public java.util.List<? extends onnx.Onnx.SparseTensorProtoOrBuilder> 
           getSparseTensorValuesOrBuilderList() {
        if (sparseTensorValuesBuilder_ != null) {
          return sparseTensorValuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sparseTensorValues_);
        }
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public onnx.Onnx.SparseTensorProto.Builder addSparseTensorValuesBuilder() {
        return getSparseTensorValuesFieldBuilder().addBuilder(
            onnx.Onnx.SparseTensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public onnx.Onnx.SparseTensorProto.Builder addSparseTensorValuesBuilder(
          int index) {
        return getSparseTensorValuesFieldBuilder().addBuilder(
            index, onnx.Onnx.SparseTensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For SparseTensorProto values.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>repeated .onnx.SparseTensorProto sparse_tensor_values = 4;</code>
       */
      public java.util.List<onnx.Onnx.SparseTensorProto.Builder> 
           getSparseTensorValuesBuilderList() {
        return getSparseTensorValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.Onnx.SparseTensorProto, onnx.Onnx.SparseTensorProto.Builder, onnx.Onnx.SparseTensorProtoOrBuilder> 
          getSparseTensorValuesFieldBuilder() {
        if (sparseTensorValuesBuilder_ == null) {
          sparseTensorValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.Onnx.SparseTensorProto, onnx.Onnx.SparseTensorProto.Builder, onnx.Onnx.SparseTensorProtoOrBuilder>(
                  sparseTensorValues_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          sparseTensorValues_ = null;
        }
        return sparseTensorValuesBuilder_;
      }

      private java.util.List<onnx.OnnxData.SequenceProto> sequenceValues_ =
        java.util.Collections.emptyList();
      private void ensureSequenceValuesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          sequenceValues_ = new java.util.ArrayList<onnx.OnnxData.SequenceProto>(sequenceValues_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder> sequenceValuesBuilder_;

      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public java.util.List<onnx.OnnxData.SequenceProto> getSequenceValuesList() {
        if (sequenceValuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sequenceValues_);
        } else {
          return sequenceValuesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public int getSequenceValuesCount() {
        if (sequenceValuesBuilder_ == null) {
          return sequenceValues_.size();
        } else {
          return sequenceValuesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public onnx.OnnxData.SequenceProto getSequenceValues(int index) {
        if (sequenceValuesBuilder_ == null) {
          return sequenceValues_.get(index);
        } else {
          return sequenceValuesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder setSequenceValues(
          int index, onnx.OnnxData.SequenceProto value) {
        if (sequenceValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSequenceValuesIsMutable();
          sequenceValues_.set(index, value);
          onChanged();
        } else {
          sequenceValuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder setSequenceValues(
          int index, onnx.OnnxData.SequenceProto.Builder builderForValue) {
        if (sequenceValuesBuilder_ == null) {
          ensureSequenceValuesIsMutable();
          sequenceValues_.set(index, builderForValue.build());
          onChanged();
        } else {
          sequenceValuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder addSequenceValues(onnx.OnnxData.SequenceProto value) {
        if (sequenceValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSequenceValuesIsMutable();
          sequenceValues_.add(value);
          onChanged();
        } else {
          sequenceValuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder addSequenceValues(
          int index, onnx.OnnxData.SequenceProto value) {
        if (sequenceValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSequenceValuesIsMutable();
          sequenceValues_.add(index, value);
          onChanged();
        } else {
          sequenceValuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder addSequenceValues(
          onnx.OnnxData.SequenceProto.Builder builderForValue) {
        if (sequenceValuesBuilder_ == null) {
          ensureSequenceValuesIsMutable();
          sequenceValues_.add(builderForValue.build());
          onChanged();
        } else {
          sequenceValuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder addSequenceValues(
          int index, onnx.OnnxData.SequenceProto.Builder builderForValue) {
        if (sequenceValuesBuilder_ == null) {
          ensureSequenceValuesIsMutable();
          sequenceValues_.add(index, builderForValue.build());
          onChanged();
        } else {
          sequenceValuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder addAllSequenceValues(
          java.lang.Iterable<? extends onnx.OnnxData.SequenceProto> values) {
        if (sequenceValuesBuilder_ == null) {
          ensureSequenceValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sequenceValues_);
          onChanged();
        } else {
          sequenceValuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder clearSequenceValues() {
        if (sequenceValuesBuilder_ == null) {
          sequenceValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          sequenceValuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public Builder removeSequenceValues(int index) {
        if (sequenceValuesBuilder_ == null) {
          ensureSequenceValuesIsMutable();
          sequenceValues_.remove(index);
          onChanged();
        } else {
          sequenceValuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public onnx.OnnxData.SequenceProto.Builder getSequenceValuesBuilder(
          int index) {
        return getSequenceValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public onnx.OnnxData.SequenceProtoOrBuilder getSequenceValuesOrBuilder(
          int index) {
        if (sequenceValuesBuilder_ == null) {
          return sequenceValues_.get(index);  } else {
          return sequenceValuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public java.util.List<? extends onnx.OnnxData.SequenceProtoOrBuilder> 
           getSequenceValuesOrBuilderList() {
        if (sequenceValuesBuilder_ != null) {
          return sequenceValuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sequenceValues_);
        }
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public onnx.OnnxData.SequenceProto.Builder addSequenceValuesBuilder() {
        return getSequenceValuesFieldBuilder().addBuilder(
            onnx.OnnxData.SequenceProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public onnx.OnnxData.SequenceProto.Builder addSequenceValuesBuilder(
          int index) {
        return getSequenceValuesFieldBuilder().addBuilder(
            index, onnx.OnnxData.SequenceProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For SequenceProto values, allowing sequences to be of themselves.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>repeated .onnx.SequenceProto sequence_values = 5;</code>
       */
      public java.util.List<onnx.OnnxData.SequenceProto.Builder> 
           getSequenceValuesBuilderList() {
        return getSequenceValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder> 
          getSequenceValuesFieldBuilder() {
        if (sequenceValuesBuilder_ == null) {
          sequenceValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder>(
                  sequenceValues_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          sequenceValues_ = null;
        }
        return sequenceValuesBuilder_;
      }

      private java.util.List<onnx.OnnxData.MapProto> mapValues_ =
        java.util.Collections.emptyList();
      private void ensureMapValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          mapValues_ = new java.util.ArrayList<onnx.OnnxData.MapProto>(mapValues_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxData.MapProto, onnx.OnnxData.MapProto.Builder, onnx.OnnxData.MapProtoOrBuilder> mapValuesBuilder_;

      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public java.util.List<onnx.OnnxData.MapProto> getMapValuesList() {
        if (mapValuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mapValues_);
        } else {
          return mapValuesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public int getMapValuesCount() {
        if (mapValuesBuilder_ == null) {
          return mapValues_.size();
        } else {
          return mapValuesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public onnx.OnnxData.MapProto getMapValues(int index) {
        if (mapValuesBuilder_ == null) {
          return mapValues_.get(index);
        } else {
          return mapValuesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder setMapValues(
          int index, onnx.OnnxData.MapProto value) {
        if (mapValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapValuesIsMutable();
          mapValues_.set(index, value);
          onChanged();
        } else {
          mapValuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder setMapValues(
          int index, onnx.OnnxData.MapProto.Builder builderForValue) {
        if (mapValuesBuilder_ == null) {
          ensureMapValuesIsMutable();
          mapValues_.set(index, builderForValue.build());
          onChanged();
        } else {
          mapValuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder addMapValues(onnx.OnnxData.MapProto value) {
        if (mapValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapValuesIsMutable();
          mapValues_.add(value);
          onChanged();
        } else {
          mapValuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder addMapValues(
          int index, onnx.OnnxData.MapProto value) {
        if (mapValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapValuesIsMutable();
          mapValues_.add(index, value);
          onChanged();
        } else {
          mapValuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder addMapValues(
          onnx.OnnxData.MapProto.Builder builderForValue) {
        if (mapValuesBuilder_ == null) {
          ensureMapValuesIsMutable();
          mapValues_.add(builderForValue.build());
          onChanged();
        } else {
          mapValuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder addMapValues(
          int index, onnx.OnnxData.MapProto.Builder builderForValue) {
        if (mapValuesBuilder_ == null) {
          ensureMapValuesIsMutable();
          mapValues_.add(index, builderForValue.build());
          onChanged();
        } else {
          mapValuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder addAllMapValues(
          java.lang.Iterable<? extends onnx.OnnxData.MapProto> values) {
        if (mapValuesBuilder_ == null) {
          ensureMapValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mapValues_);
          onChanged();
        } else {
          mapValuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder clearMapValues() {
        if (mapValuesBuilder_ == null) {
          mapValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          mapValuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public Builder removeMapValues(int index) {
        if (mapValuesBuilder_ == null) {
          ensureMapValuesIsMutable();
          mapValues_.remove(index);
          onChanged();
        } else {
          mapValuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public onnx.OnnxData.MapProto.Builder getMapValuesBuilder(
          int index) {
        return getMapValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public onnx.OnnxData.MapProtoOrBuilder getMapValuesOrBuilder(
          int index) {
        if (mapValuesBuilder_ == null) {
          return mapValues_.get(index);  } else {
          return mapValuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public java.util.List<? extends onnx.OnnxData.MapProtoOrBuilder> 
           getMapValuesOrBuilderList() {
        if (mapValuesBuilder_ != null) {
          return mapValuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mapValues_);
        }
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public onnx.OnnxData.MapProto.Builder addMapValuesBuilder() {
        return getMapValuesFieldBuilder().addBuilder(
            onnx.OnnxData.MapProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public onnx.OnnxData.MapProto.Builder addMapValuesBuilder(
          int index) {
        return getMapValuesFieldBuilder().addBuilder(
            index, onnx.OnnxData.MapProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For MapProto values.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>repeated .onnx.MapProto map_values = 6;</code>
       */
      public java.util.List<onnx.OnnxData.MapProto.Builder> 
           getMapValuesBuilderList() {
        return getMapValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxData.MapProto, onnx.OnnxData.MapProto.Builder, onnx.OnnxData.MapProtoOrBuilder> 
          getMapValuesFieldBuilder() {
        if (mapValuesBuilder_ == null) {
          mapValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxData.MapProto, onnx.OnnxData.MapProto.Builder, onnx.OnnxData.MapProtoOrBuilder>(
                  mapValues_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          mapValues_ = null;
        }
        return mapValuesBuilder_;
      }

      private java.util.List<onnx.OnnxData.OptionalProto> optionalValues_ =
        java.util.Collections.emptyList();
      private void ensureOptionalValuesIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          optionalValues_ = new java.util.ArrayList<onnx.OnnxData.OptionalProto>(optionalValues_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxData.OptionalProto, onnx.OnnxData.OptionalProto.Builder, onnx.OnnxData.OptionalProtoOrBuilder> optionalValuesBuilder_;

      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public java.util.List<onnx.OnnxData.OptionalProto> getOptionalValuesList() {
        if (optionalValuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(optionalValues_);
        } else {
          return optionalValuesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public int getOptionalValuesCount() {
        if (optionalValuesBuilder_ == null) {
          return optionalValues_.size();
        } else {
          return optionalValuesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public onnx.OnnxData.OptionalProto getOptionalValues(int index) {
        if (optionalValuesBuilder_ == null) {
          return optionalValues_.get(index);
        } else {
          return optionalValuesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder setOptionalValues(
          int index, onnx.OnnxData.OptionalProto value) {
        if (optionalValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionalValuesIsMutable();
          optionalValues_.set(index, value);
          onChanged();
        } else {
          optionalValuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder setOptionalValues(
          int index, onnx.OnnxData.OptionalProto.Builder builderForValue) {
        if (optionalValuesBuilder_ == null) {
          ensureOptionalValuesIsMutable();
          optionalValues_.set(index, builderForValue.build());
          onChanged();
        } else {
          optionalValuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder addOptionalValues(onnx.OnnxData.OptionalProto value) {
        if (optionalValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionalValuesIsMutable();
          optionalValues_.add(value);
          onChanged();
        } else {
          optionalValuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder addOptionalValues(
          int index, onnx.OnnxData.OptionalProto value) {
        if (optionalValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionalValuesIsMutable();
          optionalValues_.add(index, value);
          onChanged();
        } else {
          optionalValuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder addOptionalValues(
          onnx.OnnxData.OptionalProto.Builder builderForValue) {
        if (optionalValuesBuilder_ == null) {
          ensureOptionalValuesIsMutable();
          optionalValues_.add(builderForValue.build());
          onChanged();
        } else {
          optionalValuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder addOptionalValues(
          int index, onnx.OnnxData.OptionalProto.Builder builderForValue) {
        if (optionalValuesBuilder_ == null) {
          ensureOptionalValuesIsMutable();
          optionalValues_.add(index, builderForValue.build());
          onChanged();
        } else {
          optionalValuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder addAllOptionalValues(
          java.lang.Iterable<? extends onnx.OnnxData.OptionalProto> values) {
        if (optionalValuesBuilder_ == null) {
          ensureOptionalValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, optionalValues_);
          onChanged();
        } else {
          optionalValuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder clearOptionalValues() {
        if (optionalValuesBuilder_ == null) {
          optionalValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          optionalValuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public Builder removeOptionalValues(int index) {
        if (optionalValuesBuilder_ == null) {
          ensureOptionalValuesIsMutable();
          optionalValues_.remove(index);
          onChanged();
        } else {
          optionalValuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public onnx.OnnxData.OptionalProto.Builder getOptionalValuesBuilder(
          int index) {
        return getOptionalValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public onnx.OnnxData.OptionalProtoOrBuilder getOptionalValuesOrBuilder(
          int index) {
        if (optionalValuesBuilder_ == null) {
          return optionalValues_.get(index);  } else {
          return optionalValuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public java.util.List<? extends onnx.OnnxData.OptionalProtoOrBuilder> 
           getOptionalValuesOrBuilderList() {
        if (optionalValuesBuilder_ != null) {
          return optionalValuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(optionalValues_);
        }
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public onnx.OnnxData.OptionalProto.Builder addOptionalValuesBuilder() {
        return getOptionalValuesFieldBuilder().addBuilder(
            onnx.OnnxData.OptionalProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public onnx.OnnxData.OptionalProto.Builder addOptionalValuesBuilder(
          int index) {
        return getOptionalValuesFieldBuilder().addBuilder(
            index, onnx.OnnxData.OptionalProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For OptionalProto values.
       * When this field is present, the elem_type field MUST be Optional.
       * </pre>
       *
       * <code>repeated .onnx.OptionalProto optional_values = 7;</code>
       */
      public java.util.List<onnx.OnnxData.OptionalProto.Builder> 
           getOptionalValuesBuilderList() {
        return getOptionalValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxData.OptionalProto, onnx.OnnxData.OptionalProto.Builder, onnx.OnnxData.OptionalProtoOrBuilder> 
          getOptionalValuesFieldBuilder() {
        if (optionalValuesBuilder_ == null) {
          optionalValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxData.OptionalProto, onnx.OnnxData.OptionalProto.Builder, onnx.OnnxData.OptionalProtoOrBuilder>(
                  optionalValues_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          optionalValues_ = null;
        }
        return optionalValuesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:onnx.SequenceProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.SequenceProto)
    private static final onnx.OnnxData.SequenceProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxData.SequenceProto();
    }

    public static onnx.OnnxData.SequenceProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SequenceProto>
        PARSER = new com.google.protobuf.AbstractParser<SequenceProto>() {
      @java.lang.Override
      public SequenceProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SequenceProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SequenceProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SequenceProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public onnx.OnnxData.SequenceProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.MapProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The data type of the key.
     * This field MUST have a valid TensorProto.DataType value of
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING
     * </pre>
     *
     * <code>int32 key_type = 2;</code>
     * @return The keyType.
     */
    int getKeyType();

    /**
     * <pre>
     * Every element of keys has to be one of the following data types
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
     * The integer cases are represented by the repeated int64 field keys below.
     * </pre>
     *
     * <code>repeated int64 keys = 3;</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.Long> getKeysList();
    /**
     * <pre>
     * Every element of keys has to be one of the following data types
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
     * The integer cases are represented by the repeated int64 field keys below.
     * </pre>
     *
     * <code>repeated int64 keys = 3;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * Every element of keys has to be one of the following data types
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
     * The integer cases are represented by the repeated int64 field keys below.
     * </pre>
     *
     * <code>repeated int64 keys = 3;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    long getKeys(int index);

    /**
     * <pre>
     * If keys are strings, they are represented by the repeated bytes field
     * string_keys below.
     * </pre>
     *
     * <code>repeated bytes string_keys = 4;</code>
     * @return A list containing the stringKeys.
     */
    java.util.List<com.google.protobuf.ByteString> getStringKeysList();
    /**
     * <pre>
     * If keys are strings, they are represented by the repeated bytes field
     * string_keys below.
     * </pre>
     *
     * <code>repeated bytes string_keys = 4;</code>
     * @return The count of stringKeys.
     */
    int getStringKeysCount();
    /**
     * <pre>
     * If keys are strings, they are represented by the repeated bytes field
     * string_keys below.
     * </pre>
     *
     * <code>repeated bytes string_keys = 4;</code>
     * @param index The index of the element to return.
     * @return The stringKeys at the given index.
     */
    com.google.protobuf.ByteString getStringKeys(int index);

    /**
     * <pre>
     * MapProto values are represented in a SequenceProto of the same length as the
     * repeated keys field and have to be one of the following data types
     * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto values = 5;</code>
     * @return Whether the values field is set.
     */
    boolean hasValues();
    /**
     * <pre>
     * MapProto values are represented in a SequenceProto of the same length as the
     * repeated keys field and have to be one of the following data types
     * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto values = 5;</code>
     * @return The values.
     */
    onnx.OnnxData.SequenceProto getValues();
    /**
     * <pre>
     * MapProto values are represented in a SequenceProto of the same length as the
     * repeated keys field and have to be one of the following data types
     * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto values = 5;</code>
     */
    onnx.OnnxData.SequenceProtoOrBuilder getValuesOrBuilder();
  }
  /**
   * <pre>
   * Maps
   * Specifies an associative table, defined by keys and values.
   * MapProto is formed with a repeated field of keys (of type INT8, INT16, INT32,
   * INT64, UINT8, UINT16, UINT32, UINT64, or STRING) and values (of type TENSOR,
   * SPARSE_TENSOR, SEQUENCE, or MAP). Key types and value types have to remain
   * the same throughout the instantiation of the MapProto.
   * </pre>
   *
   * Protobuf type {@code onnx.MapProto}
   */
  public static final class MapProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.MapProto)
      MapProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapProto.newBuilder() to construct.
    private MapProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapProto() {
      name_ = "";
      keys_ = emptyLongList();
      stringKeys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MapProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              keyType_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                keys_ = newLongList();
                mutable_bitField0_ |= 0x00000001;
              }
              keys_.addLong(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                keys_ = newLongList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                keys_.addLong(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                stringKeys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              stringKeys_.add(input.readBytes());
              break;
            }
            case 42: {
              onnx.OnnxData.SequenceProto.Builder subBuilder = null;
              if (values_ != null) {
                subBuilder = values_.toBuilder();
              }
              values_ = input.readMessage(onnx.OnnxData.SequenceProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(values_);
                values_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          keys_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          stringKeys_ = java.util.Collections.unmodifiableList(stringKeys_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxData.internal_static_onnx_MapProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxData.internal_static_onnx_MapProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxData.MapProto.class, onnx.OnnxData.MapProto.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_TYPE_FIELD_NUMBER = 2;
    private int keyType_;
    /**
     * <pre>
     * The data type of the key.
     * This field MUST have a valid TensorProto.DataType value of
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING
     * </pre>
     *
     * <code>int32 key_type = 2;</code>
     * @return The keyType.
     */
    @java.lang.Override
    public int getKeyType() {
      return keyType_;
    }

    public static final int KEYS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.LongList keys_;
    /**
     * <pre>
     * Every element of keys has to be one of the following data types
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
     * The integer cases are represented by the repeated int64 field keys below.
     * </pre>
     *
     * <code>repeated int64 keys = 3;</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * Every element of keys has to be one of the following data types
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
     * The integer cases are represented by the repeated int64 field keys below.
     * </pre>
     *
     * <code>repeated int64 keys = 3;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * Every element of keys has to be one of the following data types
     * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
     * The integer cases are represented by the repeated int64 field keys below.
     * </pre>
     *
     * <code>repeated int64 keys = 3;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public long getKeys(int index) {
      return keys_.getLong(index);
    }
    private int keysMemoizedSerializedSize = -1;

    public static final int STRING_KEYS_FIELD_NUMBER = 4;
    private java.util.List<com.google.protobuf.ByteString> stringKeys_;
    /**
     * <pre>
     * If keys are strings, they are represented by the repeated bytes field
     * string_keys below.
     * </pre>
     *
     * <code>repeated bytes string_keys = 4;</code>
     * @return A list containing the stringKeys.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getStringKeysList() {
      return stringKeys_;
    }
    /**
     * <pre>
     * If keys are strings, they are represented by the repeated bytes field
     * string_keys below.
     * </pre>
     *
     * <code>repeated bytes string_keys = 4;</code>
     * @return The count of stringKeys.
     */
    public int getStringKeysCount() {
      return stringKeys_.size();
    }
    /**
     * <pre>
     * If keys are strings, they are represented by the repeated bytes field
     * string_keys below.
     * </pre>
     *
     * <code>repeated bytes string_keys = 4;</code>
     * @param index The index of the element to return.
     * @return The stringKeys at the given index.
     */
    public com.google.protobuf.ByteString getStringKeys(int index) {
      return stringKeys_.get(index);
    }

    public static final int VALUES_FIELD_NUMBER = 5;
    private onnx.OnnxData.SequenceProto values_;
    /**
     * <pre>
     * MapProto values are represented in a SequenceProto of the same length as the
     * repeated keys field and have to be one of the following data types
     * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto values = 5;</code>
     * @return Whether the values field is set.
     */
    @java.lang.Override
    public boolean hasValues() {
      return values_ != null;
    }
    /**
     * <pre>
     * MapProto values are represented in a SequenceProto of the same length as the
     * repeated keys field and have to be one of the following data types
     * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto values = 5;</code>
     * @return The values.
     */
    @java.lang.Override
    public onnx.OnnxData.SequenceProto getValues() {
      return values_ == null ? onnx.OnnxData.SequenceProto.getDefaultInstance() : values_;
    }
    /**
     * <pre>
     * MapProto values are represented in a SequenceProto of the same length as the
     * repeated keys field and have to be one of the following data types
     * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto values = 5;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.SequenceProtoOrBuilder getValuesOrBuilder() {
      return getValues();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (keyType_ != 0) {
        output.writeInt32(2, keyType_);
      }
      if (getKeysList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(keysMemoizedSerializedSize);
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeInt64NoTag(keys_.getLong(i));
      }
      for (int i = 0; i < stringKeys_.size(); i++) {
        output.writeBytes(4, stringKeys_.get(i));
      }
      if (values_ != null) {
        output.writeMessage(5, getValues());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (keyType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, keyType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(keys_.getLong(i));
        }
        size += dataSize;
        if (!getKeysList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        keysMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringKeys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(stringKeys_.get(i));
        }
        size += dataSize;
        size += 1 * getStringKeysList().size();
      }
      if (values_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getValues());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxData.MapProto)) {
        return super.equals(obj);
      }
      onnx.OnnxData.MapProto other = (onnx.OnnxData.MapProto) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getKeyType()
          != other.getKeyType()) return false;
      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getStringKeysList()
          .equals(other.getStringKeysList())) return false;
      if (hasValues() != other.hasValues()) return false;
      if (hasValues()) {
        if (!getValues()
            .equals(other.getValues())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getKeyType();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      if (getStringKeysCount() > 0) {
        hash = (37 * hash) + STRING_KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getStringKeysList().hashCode();
      }
      if (hasValues()) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValues().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxData.MapProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.MapProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.MapProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.MapProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.MapProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.MapProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.MapProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.MapProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxData.MapProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.MapProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxData.MapProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.MapProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxData.MapProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Maps
     * Specifies an associative table, defined by keys and values.
     * MapProto is formed with a repeated field of keys (of type INT8, INT16, INT32,
     * INT64, UINT8, UINT16, UINT32, UINT64, or STRING) and values (of type TENSOR,
     * SPARSE_TENSOR, SEQUENCE, or MAP). Key types and value types have to remain
     * the same throughout the instantiation of the MapProto.
     * </pre>
     *
     * Protobuf type {@code onnx.MapProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.MapProto)
        onnx.OnnxData.MapProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxData.internal_static_onnx_MapProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxData.internal_static_onnx_MapProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxData.MapProto.class, onnx.OnnxData.MapProto.Builder.class);
      }

      // Construct using onnx.OnnxData.MapProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        keyType_ = 0;

        keys_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        stringKeys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (valuesBuilder_ == null) {
          values_ = null;
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxData.internal_static_onnx_MapProto_descriptor;
      }

      @java.lang.Override
      public onnx.OnnxData.MapProto getDefaultInstanceForType() {
        return onnx.OnnxData.MapProto.getDefaultInstance();
      }

      @java.lang.Override
      public onnx.OnnxData.MapProto build() {
        onnx.OnnxData.MapProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public onnx.OnnxData.MapProto buildPartial() {
        onnx.OnnxData.MapProto result = new onnx.OnnxData.MapProto(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.keyType_ = keyType_;
        if (((bitField0_ & 0x00000001) != 0)) {
          keys_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        if (((bitField0_ & 0x00000002) != 0)) {
          stringKeys_ = java.util.Collections.unmodifiableList(stringKeys_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.stringKeys_ = stringKeys_;
        if (valuesBuilder_ == null) {
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxData.MapProto) {
          return mergeFrom((onnx.OnnxData.MapProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxData.MapProto other) {
        if (other == onnx.OnnxData.MapProto.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getKeyType() != 0) {
          setKeyType(other.getKeyType());
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        if (!other.stringKeys_.isEmpty()) {
          if (stringKeys_.isEmpty()) {
            stringKeys_ = other.stringKeys_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStringKeysIsMutable();
            stringKeys_.addAll(other.stringKeys_);
          }
          onChanged();
        }
        if (other.hasValues()) {
          mergeValues(other.getValues());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxData.MapProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxData.MapProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int keyType_ ;
      /**
       * <pre>
       * The data type of the key.
       * This field MUST have a valid TensorProto.DataType value of
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING
       * </pre>
       *
       * <code>int32 key_type = 2;</code>
       * @return The keyType.
       */
      @java.lang.Override
      public int getKeyType() {
        return keyType_;
      }
      /**
       * <pre>
       * The data type of the key.
       * This field MUST have a valid TensorProto.DataType value of
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING
       * </pre>
       *
       * <code>int32 key_type = 2;</code>
       * @param value The keyType to set.
       * @return This builder for chaining.
       */
      public Builder setKeyType(int value) {
        
        keyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data type of the key.
       * This field MUST have a valid TensorProto.DataType value of
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING
       * </pre>
       *
       * <code>int32 key_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyType() {
        
        keyType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList keys_ = emptyLongList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = mutableCopy(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Every element of keys has to be one of the following data types
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
       * The integer cases are represented by the repeated int64 field keys below.
       * </pre>
       *
       * <code>repeated int64 keys = 3;</code>
       * @return A list containing the keys.
       */
      public java.util.List<java.lang.Long>
          getKeysList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(keys_) : keys_;
      }
      /**
       * <pre>
       * Every element of keys has to be one of the following data types
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
       * The integer cases are represented by the repeated int64 field keys below.
       * </pre>
       *
       * <code>repeated int64 keys = 3;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * Every element of keys has to be one of the following data types
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
       * The integer cases are represented by the repeated int64 field keys below.
       * </pre>
       *
       * <code>repeated int64 keys = 3;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public long getKeys(int index) {
        return keys_.getLong(index);
      }
      /**
       * <pre>
       * Every element of keys has to be one of the following data types
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
       * The integer cases are represented by the repeated int64 field keys below.
       * </pre>
       *
       * <code>repeated int64 keys = 3;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, long value) {
        ensureKeysIsMutable();
        keys_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Every element of keys has to be one of the following data types
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
       * The integer cases are represented by the repeated int64 field keys below.
       * </pre>
       *
       * <code>repeated int64 keys = 3;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(long value) {
        ensureKeysIsMutable();
        keys_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Every element of keys has to be one of the following data types
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
       * The integer cases are represented by the repeated int64 field keys below.
       * </pre>
       *
       * <code>repeated int64 keys = 3;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Every element of keys has to be one of the following data types
       * INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING.
       * The integer cases are represented by the repeated int64 field keys below.
       * </pre>
       *
       * <code>repeated int64 keys = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> stringKeys_ = java.util.Collections.emptyList();
      private void ensureStringKeysIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          stringKeys_ = new java.util.ArrayList<com.google.protobuf.ByteString>(stringKeys_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * If keys are strings, they are represented by the repeated bytes field
       * string_keys below.
       * </pre>
       *
       * <code>repeated bytes string_keys = 4;</code>
       * @return A list containing the stringKeys.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getStringKeysList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(stringKeys_) : stringKeys_;
      }
      /**
       * <pre>
       * If keys are strings, they are represented by the repeated bytes field
       * string_keys below.
       * </pre>
       *
       * <code>repeated bytes string_keys = 4;</code>
       * @return The count of stringKeys.
       */
      public int getStringKeysCount() {
        return stringKeys_.size();
      }
      /**
       * <pre>
       * If keys are strings, they are represented by the repeated bytes field
       * string_keys below.
       * </pre>
       *
       * <code>repeated bytes string_keys = 4;</code>
       * @param index The index of the element to return.
       * @return The stringKeys at the given index.
       */
      public com.google.protobuf.ByteString getStringKeys(int index) {
        return stringKeys_.get(index);
      }
      /**
       * <pre>
       * If keys are strings, they are represented by the repeated bytes field
       * string_keys below.
       * </pre>
       *
       * <code>repeated bytes string_keys = 4;</code>
       * @param index The index to set the value at.
       * @param value The stringKeys to set.
       * @return This builder for chaining.
       */
      public Builder setStringKeys(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringKeysIsMutable();
        stringKeys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If keys are strings, they are represented by the repeated bytes field
       * string_keys below.
       * </pre>
       *
       * <code>repeated bytes string_keys = 4;</code>
       * @param value The stringKeys to add.
       * @return This builder for chaining.
       */
      public Builder addStringKeys(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringKeysIsMutable();
        stringKeys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If keys are strings, they are represented by the repeated bytes field
       * string_keys below.
       * </pre>
       *
       * <code>repeated bytes string_keys = 4;</code>
       * @param values The stringKeys to add.
       * @return This builder for chaining.
       */
      public Builder addAllStringKeys(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureStringKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringKeys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If keys are strings, they are represented by the repeated bytes field
       * string_keys below.
       * </pre>
       *
       * <code>repeated bytes string_keys = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringKeys() {
        stringKeys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private onnx.OnnxData.SequenceProto values_;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder> valuesBuilder_;
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       * @return Whether the values field is set.
       */
      public boolean hasValues() {
        return valuesBuilder_ != null || values_ != null;
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       * @return The values.
       */
      public onnx.OnnxData.SequenceProto getValues() {
        if (valuesBuilder_ == null) {
          return values_ == null ? onnx.OnnxData.SequenceProto.getDefaultInstance() : values_;
        } else {
          return valuesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       */
      public Builder setValues(onnx.OnnxData.SequenceProto value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          values_ = value;
          onChanged();
        } else {
          valuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       */
      public Builder setValues(
          onnx.OnnxData.SequenceProto.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          values_ = builderForValue.build();
          onChanged();
        } else {
          valuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       */
      public Builder mergeValues(onnx.OnnxData.SequenceProto value) {
        if (valuesBuilder_ == null) {
          if (values_ != null) {
            values_ =
              onnx.OnnxData.SequenceProto.newBuilder(values_).mergeFrom(value).buildPartial();
          } else {
            values_ = value;
          }
          onChanged();
        } else {
          valuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = null;
          onChanged();
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       */
      public onnx.OnnxData.SequenceProto.Builder getValuesBuilder() {
        
        onChanged();
        return getValuesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       */
      public onnx.OnnxData.SequenceProtoOrBuilder getValuesOrBuilder() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilder();
        } else {
          return values_ == null ?
              onnx.OnnxData.SequenceProto.getDefaultInstance() : values_;
        }
      }
      /**
       * <pre>
       * MapProto values are represented in a SequenceProto of the same length as the
       * repeated keys field and have to be one of the following data types
       * TENSOR, SPARSE_TENSOR, MAP, SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto values = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder>(
                  getValues(),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:onnx.MapProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.MapProto)
    private static final onnx.OnnxData.MapProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxData.MapProto();
    }

    public static onnx.OnnxData.MapProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapProto>
        PARSER = new com.google.protobuf.AbstractParser<MapProto>() {
      @java.lang.Override
      public MapProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public onnx.OnnxData.MapProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionalProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.OptionalProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The data type of the element, identifies if the OptionalProto value
     * is Tensor, Sparse Tensor, Sequence, Map, or Optional.
     * The type of the optional value MUST match the elem_type specified.
     * This field MUST have a valid OptionalProto.DataType value.
     * </pre>
     *
     * <code>int32 elem_type = 2;</code>
     * @return The elemType.
     */
    int getElemType();

    /**
     * <pre>
     * For TensorProto value.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>.onnx.TensorProto tensor_value = 3;</code>
     * @return Whether the tensorValue field is set.
     */
    boolean hasTensorValue();
    /**
     * <pre>
     * For TensorProto value.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>.onnx.TensorProto tensor_value = 3;</code>
     * @return The tensorValue.
     */
    onnx.Onnx.TensorProto getTensorValue();
    /**
     * <pre>
     * For TensorProto value.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>.onnx.TensorProto tensor_value = 3;</code>
     */
    onnx.Onnx.TensorProtoOrBuilder getTensorValueOrBuilder();

    /**
     * <pre>
     * For SparseTensorProto value.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
     * @return Whether the sparseTensorValue field is set.
     */
    boolean hasSparseTensorValue();
    /**
     * <pre>
     * For SparseTensorProto value.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
     * @return The sparseTensorValue.
     */
    onnx.Onnx.SparseTensorProto getSparseTensorValue();
    /**
     * <pre>
     * For SparseTensorProto value.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
     */
    onnx.Onnx.SparseTensorProtoOrBuilder getSparseTensorValueOrBuilder();

    /**
     * <pre>
     * For SequenceProto value.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto sequence_value = 5;</code>
     * @return Whether the sequenceValue field is set.
     */
    boolean hasSequenceValue();
    /**
     * <pre>
     * For SequenceProto value.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto sequence_value = 5;</code>
     * @return The sequenceValue.
     */
    onnx.OnnxData.SequenceProto getSequenceValue();
    /**
     * <pre>
     * For SequenceProto value.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto sequence_value = 5;</code>
     */
    onnx.OnnxData.SequenceProtoOrBuilder getSequenceValueOrBuilder();

    /**
     * <pre>
     * For MapProto value.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>.onnx.MapProto map_value = 6;</code>
     * @return Whether the mapValue field is set.
     */
    boolean hasMapValue();
    /**
     * <pre>
     * For MapProto value.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>.onnx.MapProto map_value = 6;</code>
     * @return The mapValue.
     */
    onnx.OnnxData.MapProto getMapValue();
    /**
     * <pre>
     * For MapProto value.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>.onnx.MapProto map_value = 6;</code>
     */
    onnx.OnnxData.MapProtoOrBuilder getMapValueOrBuilder();

    /**
     * <pre>
     * For OptionalProto value, allowing optional to be of itself (completeness)
     * When this field is present, the elem_type field MUST be OPTIONAL.
     * </pre>
     *
     * <code>.onnx.OptionalProto optional_value = 7;</code>
     * @return Whether the optionalValue field is set.
     */
    boolean hasOptionalValue();
    /**
     * <pre>
     * For OptionalProto value, allowing optional to be of itself (completeness)
     * When this field is present, the elem_type field MUST be OPTIONAL.
     * </pre>
     *
     * <code>.onnx.OptionalProto optional_value = 7;</code>
     * @return The optionalValue.
     */
    onnx.OnnxData.OptionalProto getOptionalValue();
    /**
     * <pre>
     * For OptionalProto value, allowing optional to be of itself (completeness)
     * When this field is present, the elem_type field MUST be OPTIONAL.
     * </pre>
     *
     * <code>.onnx.OptionalProto optional_value = 7;</code>
     */
    onnx.OnnxData.OptionalProtoOrBuilder getOptionalValueOrBuilder();
  }
  /**
   * <pre>
   * Optional
   * </pre>
   *
   * Protobuf type {@code onnx.OptionalProto}
   */
  public static final class OptionalProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.OptionalProto)
      OptionalProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OptionalProto.newBuilder() to construct.
    private OptionalProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OptionalProto() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OptionalProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OptionalProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              elemType_ = input.readInt32();
              break;
            }
            case 26: {
              onnx.Onnx.TensorProto.Builder subBuilder = null;
              if (tensorValue_ != null) {
                subBuilder = tensorValue_.toBuilder();
              }
              tensorValue_ = input.readMessage(onnx.Onnx.TensorProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tensorValue_);
                tensorValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              onnx.Onnx.SparseTensorProto.Builder subBuilder = null;
              if (sparseTensorValue_ != null) {
                subBuilder = sparseTensorValue_.toBuilder();
              }
              sparseTensorValue_ = input.readMessage(onnx.Onnx.SparseTensorProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sparseTensorValue_);
                sparseTensorValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              onnx.OnnxData.SequenceProto.Builder subBuilder = null;
              if (sequenceValue_ != null) {
                subBuilder = sequenceValue_.toBuilder();
              }
              sequenceValue_ = input.readMessage(onnx.OnnxData.SequenceProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sequenceValue_);
                sequenceValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              onnx.OnnxData.MapProto.Builder subBuilder = null;
              if (mapValue_ != null) {
                subBuilder = mapValue_.toBuilder();
              }
              mapValue_ = input.readMessage(onnx.OnnxData.MapProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mapValue_);
                mapValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              onnx.OnnxData.OptionalProto.Builder subBuilder = null;
              if (optionalValue_ != null) {
                subBuilder = optionalValue_.toBuilder();
              }
              optionalValue_ = input.readMessage(onnx.OnnxData.OptionalProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(optionalValue_);
                optionalValue_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxData.internal_static_onnx_OptionalProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxData.internal_static_onnx_OptionalProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxData.OptionalProto.class, onnx.OnnxData.OptionalProto.Builder.class);
    }

    /**
     * Protobuf enum {@code onnx.OptionalProto.DataType}
     */
    public enum DataType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>TENSOR = 1;</code>
       */
      TENSOR(1),
      /**
       * <code>SPARSE_TENSOR = 2;</code>
       */
      SPARSE_TENSOR(2),
      /**
       * <code>SEQUENCE = 3;</code>
       */
      SEQUENCE(3),
      /**
       * <code>MAP = 4;</code>
       */
      MAP(4),
      /**
       * <code>OPTIONAL = 5;</code>
       */
      OPTIONAL(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>TENSOR = 1;</code>
       */
      public static final int TENSOR_VALUE = 1;
      /**
       * <code>SPARSE_TENSOR = 2;</code>
       */
      public static final int SPARSE_TENSOR_VALUE = 2;
      /**
       * <code>SEQUENCE = 3;</code>
       */
      public static final int SEQUENCE_VALUE = 3;
      /**
       * <code>MAP = 4;</code>
       */
      public static final int MAP_VALUE = 4;
      /**
       * <code>OPTIONAL = 5;</code>
       */
      public static final int OPTIONAL_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DataType forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return TENSOR;
          case 2: return SPARSE_TENSOR;
          case 3: return SEQUENCE;
          case 4: return MAP;
          case 5: return OPTIONAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DataType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
              public DataType findValueByNumber(int number) {
                return DataType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return onnx.OnnxData.OptionalProto.getDescriptor().getEnumTypes().get(0);
      }

      private static final DataType[] VALUES = values();

      public static DataType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DataType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:onnx.OptionalProto.DataType)
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ELEM_TYPE_FIELD_NUMBER = 2;
    private int elemType_;
    /**
     * <pre>
     * The data type of the element, identifies if the OptionalProto value
     * is Tensor, Sparse Tensor, Sequence, Map, or Optional.
     * The type of the optional value MUST match the elem_type specified.
     * This field MUST have a valid OptionalProto.DataType value.
     * </pre>
     *
     * <code>int32 elem_type = 2;</code>
     * @return The elemType.
     */
    @java.lang.Override
    public int getElemType() {
      return elemType_;
    }

    public static final int TENSOR_VALUE_FIELD_NUMBER = 3;
    private onnx.Onnx.TensorProto tensorValue_;
    /**
     * <pre>
     * For TensorProto value.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>.onnx.TensorProto tensor_value = 3;</code>
     * @return Whether the tensorValue field is set.
     */
    @java.lang.Override
    public boolean hasTensorValue() {
      return tensorValue_ != null;
    }
    /**
     * <pre>
     * For TensorProto value.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>.onnx.TensorProto tensor_value = 3;</code>
     * @return The tensorValue.
     */
    @java.lang.Override
    public onnx.Onnx.TensorProto getTensorValue() {
      return tensorValue_ == null ? onnx.Onnx.TensorProto.getDefaultInstance() : tensorValue_;
    }
    /**
     * <pre>
     * For TensorProto value.
     * When this field is present, the elem_type field MUST be TENSOR.
     * </pre>
     *
     * <code>.onnx.TensorProto tensor_value = 3;</code>
     */
    @java.lang.Override
    public onnx.Onnx.TensorProtoOrBuilder getTensorValueOrBuilder() {
      return getTensorValue();
    }

    public static final int SPARSE_TENSOR_VALUE_FIELD_NUMBER = 4;
    private onnx.Onnx.SparseTensorProto sparseTensorValue_;
    /**
     * <pre>
     * For SparseTensorProto value.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
     * @return Whether the sparseTensorValue field is set.
     */
    @java.lang.Override
    public boolean hasSparseTensorValue() {
      return sparseTensorValue_ != null;
    }
    /**
     * <pre>
     * For SparseTensorProto value.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
     * @return The sparseTensorValue.
     */
    @java.lang.Override
    public onnx.Onnx.SparseTensorProto getSparseTensorValue() {
      return sparseTensorValue_ == null ? onnx.Onnx.SparseTensorProto.getDefaultInstance() : sparseTensorValue_;
    }
    /**
     * <pre>
     * For SparseTensorProto value.
     * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
     * </pre>
     *
     * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
     */
    @java.lang.Override
    public onnx.Onnx.SparseTensorProtoOrBuilder getSparseTensorValueOrBuilder() {
      return getSparseTensorValue();
    }

    public static final int SEQUENCE_VALUE_FIELD_NUMBER = 5;
    private onnx.OnnxData.SequenceProto sequenceValue_;
    /**
     * <pre>
     * For SequenceProto value.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto sequence_value = 5;</code>
     * @return Whether the sequenceValue field is set.
     */
    @java.lang.Override
    public boolean hasSequenceValue() {
      return sequenceValue_ != null;
    }
    /**
     * <pre>
     * For SequenceProto value.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto sequence_value = 5;</code>
     * @return The sequenceValue.
     */
    @java.lang.Override
    public onnx.OnnxData.SequenceProto getSequenceValue() {
      return sequenceValue_ == null ? onnx.OnnxData.SequenceProto.getDefaultInstance() : sequenceValue_;
    }
    /**
     * <pre>
     * For SequenceProto value.
     * When this field is present, the elem_type field MUST be SEQUENCE.
     * </pre>
     *
     * <code>.onnx.SequenceProto sequence_value = 5;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.SequenceProtoOrBuilder getSequenceValueOrBuilder() {
      return getSequenceValue();
    }

    public static final int MAP_VALUE_FIELD_NUMBER = 6;
    private onnx.OnnxData.MapProto mapValue_;
    /**
     * <pre>
     * For MapProto value.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>.onnx.MapProto map_value = 6;</code>
     * @return Whether the mapValue field is set.
     */
    @java.lang.Override
    public boolean hasMapValue() {
      return mapValue_ != null;
    }
    /**
     * <pre>
     * For MapProto value.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>.onnx.MapProto map_value = 6;</code>
     * @return The mapValue.
     */
    @java.lang.Override
    public onnx.OnnxData.MapProto getMapValue() {
      return mapValue_ == null ? onnx.OnnxData.MapProto.getDefaultInstance() : mapValue_;
    }
    /**
     * <pre>
     * For MapProto value.
     * When this field is present, the elem_type field MUST be MAP.
     * </pre>
     *
     * <code>.onnx.MapProto map_value = 6;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.MapProtoOrBuilder getMapValueOrBuilder() {
      return getMapValue();
    }

    public static final int OPTIONAL_VALUE_FIELD_NUMBER = 7;
    private onnx.OnnxData.OptionalProto optionalValue_;
    /**
     * <pre>
     * For OptionalProto value, allowing optional to be of itself (completeness)
     * When this field is present, the elem_type field MUST be OPTIONAL.
     * </pre>
     *
     * <code>.onnx.OptionalProto optional_value = 7;</code>
     * @return Whether the optionalValue field is set.
     */
    @java.lang.Override
    public boolean hasOptionalValue() {
      return optionalValue_ != null;
    }
    /**
     * <pre>
     * For OptionalProto value, allowing optional to be of itself (completeness)
     * When this field is present, the elem_type field MUST be OPTIONAL.
     * </pre>
     *
     * <code>.onnx.OptionalProto optional_value = 7;</code>
     * @return The optionalValue.
     */
    @java.lang.Override
    public onnx.OnnxData.OptionalProto getOptionalValue() {
      return optionalValue_ == null ? onnx.OnnxData.OptionalProto.getDefaultInstance() : optionalValue_;
    }
    /**
     * <pre>
     * For OptionalProto value, allowing optional to be of itself (completeness)
     * When this field is present, the elem_type field MUST be OPTIONAL.
     * </pre>
     *
     * <code>.onnx.OptionalProto optional_value = 7;</code>
     */
    @java.lang.Override
    public onnx.OnnxData.OptionalProtoOrBuilder getOptionalValueOrBuilder() {
      return getOptionalValue();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (elemType_ != 0) {
        output.writeInt32(2, elemType_);
      }
      if (tensorValue_ != null) {
        output.writeMessage(3, getTensorValue());
      }
      if (sparseTensorValue_ != null) {
        output.writeMessage(4, getSparseTensorValue());
      }
      if (sequenceValue_ != null) {
        output.writeMessage(5, getSequenceValue());
      }
      if (mapValue_ != null) {
        output.writeMessage(6, getMapValue());
      }
      if (optionalValue_ != null) {
        output.writeMessage(7, getOptionalValue());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (elemType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, elemType_);
      }
      if (tensorValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTensorValue());
      }
      if (sparseTensorValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSparseTensorValue());
      }
      if (sequenceValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSequenceValue());
      }
      if (mapValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMapValue());
      }
      if (optionalValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getOptionalValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxData.OptionalProto)) {
        return super.equals(obj);
      }
      onnx.OnnxData.OptionalProto other = (onnx.OnnxData.OptionalProto) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getElemType()
          != other.getElemType()) return false;
      if (hasTensorValue() != other.hasTensorValue()) return false;
      if (hasTensorValue()) {
        if (!getTensorValue()
            .equals(other.getTensorValue())) return false;
      }
      if (hasSparseTensorValue() != other.hasSparseTensorValue()) return false;
      if (hasSparseTensorValue()) {
        if (!getSparseTensorValue()
            .equals(other.getSparseTensorValue())) return false;
      }
      if (hasSequenceValue() != other.hasSequenceValue()) return false;
      if (hasSequenceValue()) {
        if (!getSequenceValue()
            .equals(other.getSequenceValue())) return false;
      }
      if (hasMapValue() != other.hasMapValue()) return false;
      if (hasMapValue()) {
        if (!getMapValue()
            .equals(other.getMapValue())) return false;
      }
      if (hasOptionalValue() != other.hasOptionalValue()) return false;
      if (hasOptionalValue()) {
        if (!getOptionalValue()
            .equals(other.getOptionalValue())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ELEM_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getElemType();
      if (hasTensorValue()) {
        hash = (37 * hash) + TENSOR_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTensorValue().hashCode();
      }
      if (hasSparseTensorValue()) {
        hash = (37 * hash) + SPARSE_TENSOR_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getSparseTensorValue().hashCode();
      }
      if (hasSequenceValue()) {
        hash = (37 * hash) + SEQUENCE_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceValue().hashCode();
      }
      if (hasMapValue()) {
        hash = (37 * hash) + MAP_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getMapValue().hashCode();
      }
      if (hasOptionalValue()) {
        hash = (37 * hash) + OPTIONAL_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getOptionalValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxData.OptionalProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxData.OptionalProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.OptionalProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxData.OptionalProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxData.OptionalProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Optional
     * </pre>
     *
     * Protobuf type {@code onnx.OptionalProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.OptionalProto)
        onnx.OnnxData.OptionalProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxData.internal_static_onnx_OptionalProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxData.internal_static_onnx_OptionalProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxData.OptionalProto.class, onnx.OnnxData.OptionalProto.Builder.class);
      }

      // Construct using onnx.OnnxData.OptionalProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        elemType_ = 0;

        if (tensorValueBuilder_ == null) {
          tensorValue_ = null;
        } else {
          tensorValue_ = null;
          tensorValueBuilder_ = null;
        }
        if (sparseTensorValueBuilder_ == null) {
          sparseTensorValue_ = null;
        } else {
          sparseTensorValue_ = null;
          sparseTensorValueBuilder_ = null;
        }
        if (sequenceValueBuilder_ == null) {
          sequenceValue_ = null;
        } else {
          sequenceValue_ = null;
          sequenceValueBuilder_ = null;
        }
        if (mapValueBuilder_ == null) {
          mapValue_ = null;
        } else {
          mapValue_ = null;
          mapValueBuilder_ = null;
        }
        if (optionalValueBuilder_ == null) {
          optionalValue_ = null;
        } else {
          optionalValue_ = null;
          optionalValueBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxData.internal_static_onnx_OptionalProto_descriptor;
      }

      @java.lang.Override
      public onnx.OnnxData.OptionalProto getDefaultInstanceForType() {
        return onnx.OnnxData.OptionalProto.getDefaultInstance();
      }

      @java.lang.Override
      public onnx.OnnxData.OptionalProto build() {
        onnx.OnnxData.OptionalProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public onnx.OnnxData.OptionalProto buildPartial() {
        onnx.OnnxData.OptionalProto result = new onnx.OnnxData.OptionalProto(this);
        result.name_ = name_;
        result.elemType_ = elemType_;
        if (tensorValueBuilder_ == null) {
          result.tensorValue_ = tensorValue_;
        } else {
          result.tensorValue_ = tensorValueBuilder_.build();
        }
        if (sparseTensorValueBuilder_ == null) {
          result.sparseTensorValue_ = sparseTensorValue_;
        } else {
          result.sparseTensorValue_ = sparseTensorValueBuilder_.build();
        }
        if (sequenceValueBuilder_ == null) {
          result.sequenceValue_ = sequenceValue_;
        } else {
          result.sequenceValue_ = sequenceValueBuilder_.build();
        }
        if (mapValueBuilder_ == null) {
          result.mapValue_ = mapValue_;
        } else {
          result.mapValue_ = mapValueBuilder_.build();
        }
        if (optionalValueBuilder_ == null) {
          result.optionalValue_ = optionalValue_;
        } else {
          result.optionalValue_ = optionalValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxData.OptionalProto) {
          return mergeFrom((onnx.OnnxData.OptionalProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxData.OptionalProto other) {
        if (other == onnx.OnnxData.OptionalProto.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getElemType() != 0) {
          setElemType(other.getElemType());
        }
        if (other.hasTensorValue()) {
          mergeTensorValue(other.getTensorValue());
        }
        if (other.hasSparseTensorValue()) {
          mergeSparseTensorValue(other.getSparseTensorValue());
        }
        if (other.hasSequenceValue()) {
          mergeSequenceValue(other.getSequenceValue());
        }
        if (other.hasMapValue()) {
          mergeMapValue(other.getMapValue());
        }
        if (other.hasOptionalValue()) {
          mergeOptionalValue(other.getOptionalValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxData.OptionalProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxData.OptionalProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int elemType_ ;
      /**
       * <pre>
       * The data type of the element, identifies if the OptionalProto value
       * is Tensor, Sparse Tensor, Sequence, Map, or Optional.
       * The type of the optional value MUST match the elem_type specified.
       * This field MUST have a valid OptionalProto.DataType value.
       * </pre>
       *
       * <code>int32 elem_type = 2;</code>
       * @return The elemType.
       */
      @java.lang.Override
      public int getElemType() {
        return elemType_;
      }
      /**
       * <pre>
       * The data type of the element, identifies if the OptionalProto value
       * is Tensor, Sparse Tensor, Sequence, Map, or Optional.
       * The type of the optional value MUST match the elem_type specified.
       * This field MUST have a valid OptionalProto.DataType value.
       * </pre>
       *
       * <code>int32 elem_type = 2;</code>
       * @param value The elemType to set.
       * @return This builder for chaining.
       */
      public Builder setElemType(int value) {
        
        elemType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data type of the element, identifies if the OptionalProto value
       * is Tensor, Sparse Tensor, Sequence, Map, or Optional.
       * The type of the optional value MUST match the elem_type specified.
       * This field MUST have a valid OptionalProto.DataType value.
       * </pre>
       *
       * <code>int32 elem_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearElemType() {
        
        elemType_ = 0;
        onChanged();
        return this;
      }

      private onnx.Onnx.TensorProto tensorValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.Onnx.TensorProto, onnx.Onnx.TensorProto.Builder, onnx.Onnx.TensorProtoOrBuilder> tensorValueBuilder_;
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       * @return Whether the tensorValue field is set.
       */
      public boolean hasTensorValue() {
        return tensorValueBuilder_ != null || tensorValue_ != null;
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       * @return The tensorValue.
       */
      public onnx.Onnx.TensorProto getTensorValue() {
        if (tensorValueBuilder_ == null) {
          return tensorValue_ == null ? onnx.Onnx.TensorProto.getDefaultInstance() : tensorValue_;
        } else {
          return tensorValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       */
      public Builder setTensorValue(onnx.Onnx.TensorProto value) {
        if (tensorValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tensorValue_ = value;
          onChanged();
        } else {
          tensorValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       */
      public Builder setTensorValue(
          onnx.Onnx.TensorProto.Builder builderForValue) {
        if (tensorValueBuilder_ == null) {
          tensorValue_ = builderForValue.build();
          onChanged();
        } else {
          tensorValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       */
      public Builder mergeTensorValue(onnx.Onnx.TensorProto value) {
        if (tensorValueBuilder_ == null) {
          if (tensorValue_ != null) {
            tensorValue_ =
              onnx.Onnx.TensorProto.newBuilder(tensorValue_).mergeFrom(value).buildPartial();
          } else {
            tensorValue_ = value;
          }
          onChanged();
        } else {
          tensorValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       */
      public Builder clearTensorValue() {
        if (tensorValueBuilder_ == null) {
          tensorValue_ = null;
          onChanged();
        } else {
          tensorValue_ = null;
          tensorValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       */
      public onnx.Onnx.TensorProto.Builder getTensorValueBuilder() {
        
        onChanged();
        return getTensorValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       */
      public onnx.Onnx.TensorProtoOrBuilder getTensorValueOrBuilder() {
        if (tensorValueBuilder_ != null) {
          return tensorValueBuilder_.getMessageOrBuilder();
        } else {
          return tensorValue_ == null ?
              onnx.Onnx.TensorProto.getDefaultInstance() : tensorValue_;
        }
      }
      /**
       * <pre>
       * For TensorProto value.
       * When this field is present, the elem_type field MUST be TENSOR.
       * </pre>
       *
       * <code>.onnx.TensorProto tensor_value = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.Onnx.TensorProto, onnx.Onnx.TensorProto.Builder, onnx.Onnx.TensorProtoOrBuilder> 
          getTensorValueFieldBuilder() {
        if (tensorValueBuilder_ == null) {
          tensorValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.Onnx.TensorProto, onnx.Onnx.TensorProto.Builder, onnx.Onnx.TensorProtoOrBuilder>(
                  getTensorValue(),
                  getParentForChildren(),
                  isClean());
          tensorValue_ = null;
        }
        return tensorValueBuilder_;
      }

      private onnx.Onnx.SparseTensorProto sparseTensorValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.Onnx.SparseTensorProto, onnx.Onnx.SparseTensorProto.Builder, onnx.Onnx.SparseTensorProtoOrBuilder> sparseTensorValueBuilder_;
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       * @return Whether the sparseTensorValue field is set.
       */
      public boolean hasSparseTensorValue() {
        return sparseTensorValueBuilder_ != null || sparseTensorValue_ != null;
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       * @return The sparseTensorValue.
       */
      public onnx.Onnx.SparseTensorProto getSparseTensorValue() {
        if (sparseTensorValueBuilder_ == null) {
          return sparseTensorValue_ == null ? onnx.Onnx.SparseTensorProto.getDefaultInstance() : sparseTensorValue_;
        } else {
          return sparseTensorValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       */
      public Builder setSparseTensorValue(onnx.Onnx.SparseTensorProto value) {
        if (sparseTensorValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sparseTensorValue_ = value;
          onChanged();
        } else {
          sparseTensorValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       */
      public Builder setSparseTensorValue(
          onnx.Onnx.SparseTensorProto.Builder builderForValue) {
        if (sparseTensorValueBuilder_ == null) {
          sparseTensorValue_ = builderForValue.build();
          onChanged();
        } else {
          sparseTensorValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       */
      public Builder mergeSparseTensorValue(onnx.Onnx.SparseTensorProto value) {
        if (sparseTensorValueBuilder_ == null) {
          if (sparseTensorValue_ != null) {
            sparseTensorValue_ =
              onnx.Onnx.SparseTensorProto.newBuilder(sparseTensorValue_).mergeFrom(value).buildPartial();
          } else {
            sparseTensorValue_ = value;
          }
          onChanged();
        } else {
          sparseTensorValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       */
      public Builder clearSparseTensorValue() {
        if (sparseTensorValueBuilder_ == null) {
          sparseTensorValue_ = null;
          onChanged();
        } else {
          sparseTensorValue_ = null;
          sparseTensorValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       */
      public onnx.Onnx.SparseTensorProto.Builder getSparseTensorValueBuilder() {
        
        onChanged();
        return getSparseTensorValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       */
      public onnx.Onnx.SparseTensorProtoOrBuilder getSparseTensorValueOrBuilder() {
        if (sparseTensorValueBuilder_ != null) {
          return sparseTensorValueBuilder_.getMessageOrBuilder();
        } else {
          return sparseTensorValue_ == null ?
              onnx.Onnx.SparseTensorProto.getDefaultInstance() : sparseTensorValue_;
        }
      }
      /**
       * <pre>
       * For SparseTensorProto value.
       * When this field is present, the elem_type field MUST be SPARSE_TENSOR.
       * </pre>
       *
       * <code>.onnx.SparseTensorProto sparse_tensor_value = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.Onnx.SparseTensorProto, onnx.Onnx.SparseTensorProto.Builder, onnx.Onnx.SparseTensorProtoOrBuilder> 
          getSparseTensorValueFieldBuilder() {
        if (sparseTensorValueBuilder_ == null) {
          sparseTensorValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.Onnx.SparseTensorProto, onnx.Onnx.SparseTensorProto.Builder, onnx.Onnx.SparseTensorProtoOrBuilder>(
                  getSparseTensorValue(),
                  getParentForChildren(),
                  isClean());
          sparseTensorValue_ = null;
        }
        return sparseTensorValueBuilder_;
      }

      private onnx.OnnxData.SequenceProto sequenceValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder> sequenceValueBuilder_;
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       * @return Whether the sequenceValue field is set.
       */
      public boolean hasSequenceValue() {
        return sequenceValueBuilder_ != null || sequenceValue_ != null;
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       * @return The sequenceValue.
       */
      public onnx.OnnxData.SequenceProto getSequenceValue() {
        if (sequenceValueBuilder_ == null) {
          return sequenceValue_ == null ? onnx.OnnxData.SequenceProto.getDefaultInstance() : sequenceValue_;
        } else {
          return sequenceValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       */
      public Builder setSequenceValue(onnx.OnnxData.SequenceProto value) {
        if (sequenceValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sequenceValue_ = value;
          onChanged();
        } else {
          sequenceValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       */
      public Builder setSequenceValue(
          onnx.OnnxData.SequenceProto.Builder builderForValue) {
        if (sequenceValueBuilder_ == null) {
          sequenceValue_ = builderForValue.build();
          onChanged();
        } else {
          sequenceValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       */
      public Builder mergeSequenceValue(onnx.OnnxData.SequenceProto value) {
        if (sequenceValueBuilder_ == null) {
          if (sequenceValue_ != null) {
            sequenceValue_ =
              onnx.OnnxData.SequenceProto.newBuilder(sequenceValue_).mergeFrom(value).buildPartial();
          } else {
            sequenceValue_ = value;
          }
          onChanged();
        } else {
          sequenceValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       */
      public Builder clearSequenceValue() {
        if (sequenceValueBuilder_ == null) {
          sequenceValue_ = null;
          onChanged();
        } else {
          sequenceValue_ = null;
          sequenceValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       */
      public onnx.OnnxData.SequenceProto.Builder getSequenceValueBuilder() {
        
        onChanged();
        return getSequenceValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       */
      public onnx.OnnxData.SequenceProtoOrBuilder getSequenceValueOrBuilder() {
        if (sequenceValueBuilder_ != null) {
          return sequenceValueBuilder_.getMessageOrBuilder();
        } else {
          return sequenceValue_ == null ?
              onnx.OnnxData.SequenceProto.getDefaultInstance() : sequenceValue_;
        }
      }
      /**
       * <pre>
       * For SequenceProto value.
       * When this field is present, the elem_type field MUST be SEQUENCE.
       * </pre>
       *
       * <code>.onnx.SequenceProto sequence_value = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder> 
          getSequenceValueFieldBuilder() {
        if (sequenceValueBuilder_ == null) {
          sequenceValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxData.SequenceProto, onnx.OnnxData.SequenceProto.Builder, onnx.OnnxData.SequenceProtoOrBuilder>(
                  getSequenceValue(),
                  getParentForChildren(),
                  isClean());
          sequenceValue_ = null;
        }
        return sequenceValueBuilder_;
      }

      private onnx.OnnxData.MapProto mapValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.MapProto, onnx.OnnxData.MapProto.Builder, onnx.OnnxData.MapProtoOrBuilder> mapValueBuilder_;
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       * @return Whether the mapValue field is set.
       */
      public boolean hasMapValue() {
        return mapValueBuilder_ != null || mapValue_ != null;
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       * @return The mapValue.
       */
      public onnx.OnnxData.MapProto getMapValue() {
        if (mapValueBuilder_ == null) {
          return mapValue_ == null ? onnx.OnnxData.MapProto.getDefaultInstance() : mapValue_;
        } else {
          return mapValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       */
      public Builder setMapValue(onnx.OnnxData.MapProto value) {
        if (mapValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mapValue_ = value;
          onChanged();
        } else {
          mapValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       */
      public Builder setMapValue(
          onnx.OnnxData.MapProto.Builder builderForValue) {
        if (mapValueBuilder_ == null) {
          mapValue_ = builderForValue.build();
          onChanged();
        } else {
          mapValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       */
      public Builder mergeMapValue(onnx.OnnxData.MapProto value) {
        if (mapValueBuilder_ == null) {
          if (mapValue_ != null) {
            mapValue_ =
              onnx.OnnxData.MapProto.newBuilder(mapValue_).mergeFrom(value).buildPartial();
          } else {
            mapValue_ = value;
          }
          onChanged();
        } else {
          mapValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       */
      public Builder clearMapValue() {
        if (mapValueBuilder_ == null) {
          mapValue_ = null;
          onChanged();
        } else {
          mapValue_ = null;
          mapValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       */
      public onnx.OnnxData.MapProto.Builder getMapValueBuilder() {
        
        onChanged();
        return getMapValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       */
      public onnx.OnnxData.MapProtoOrBuilder getMapValueOrBuilder() {
        if (mapValueBuilder_ != null) {
          return mapValueBuilder_.getMessageOrBuilder();
        } else {
          return mapValue_ == null ?
              onnx.OnnxData.MapProto.getDefaultInstance() : mapValue_;
        }
      }
      /**
       * <pre>
       * For MapProto value.
       * When this field is present, the elem_type field MUST be MAP.
       * </pre>
       *
       * <code>.onnx.MapProto map_value = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.MapProto, onnx.OnnxData.MapProto.Builder, onnx.OnnxData.MapProtoOrBuilder> 
          getMapValueFieldBuilder() {
        if (mapValueBuilder_ == null) {
          mapValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxData.MapProto, onnx.OnnxData.MapProto.Builder, onnx.OnnxData.MapProtoOrBuilder>(
                  getMapValue(),
                  getParentForChildren(),
                  isClean());
          mapValue_ = null;
        }
        return mapValueBuilder_;
      }

      private onnx.OnnxData.OptionalProto optionalValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.OptionalProto, onnx.OnnxData.OptionalProto.Builder, onnx.OnnxData.OptionalProtoOrBuilder> optionalValueBuilder_;
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       * @return Whether the optionalValue field is set.
       */
      public boolean hasOptionalValue() {
        return optionalValueBuilder_ != null || optionalValue_ != null;
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       * @return The optionalValue.
       */
      public onnx.OnnxData.OptionalProto getOptionalValue() {
        if (optionalValueBuilder_ == null) {
          return optionalValue_ == null ? onnx.OnnxData.OptionalProto.getDefaultInstance() : optionalValue_;
        } else {
          return optionalValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       */
      public Builder setOptionalValue(onnx.OnnxData.OptionalProto value) {
        if (optionalValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optionalValue_ = value;
          onChanged();
        } else {
          optionalValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       */
      public Builder setOptionalValue(
          onnx.OnnxData.OptionalProto.Builder builderForValue) {
        if (optionalValueBuilder_ == null) {
          optionalValue_ = builderForValue.build();
          onChanged();
        } else {
          optionalValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       */
      public Builder mergeOptionalValue(onnx.OnnxData.OptionalProto value) {
        if (optionalValueBuilder_ == null) {
          if (optionalValue_ != null) {
            optionalValue_ =
              onnx.OnnxData.OptionalProto.newBuilder(optionalValue_).mergeFrom(value).buildPartial();
          } else {
            optionalValue_ = value;
          }
          onChanged();
        } else {
          optionalValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       */
      public Builder clearOptionalValue() {
        if (optionalValueBuilder_ == null) {
          optionalValue_ = null;
          onChanged();
        } else {
          optionalValue_ = null;
          optionalValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       */
      public onnx.OnnxData.OptionalProto.Builder getOptionalValueBuilder() {
        
        onChanged();
        return getOptionalValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       */
      public onnx.OnnxData.OptionalProtoOrBuilder getOptionalValueOrBuilder() {
        if (optionalValueBuilder_ != null) {
          return optionalValueBuilder_.getMessageOrBuilder();
        } else {
          return optionalValue_ == null ?
              onnx.OnnxData.OptionalProto.getDefaultInstance() : optionalValue_;
        }
      }
      /**
       * <pre>
       * For OptionalProto value, allowing optional to be of itself (completeness)
       * When this field is present, the elem_type field MUST be OPTIONAL.
       * </pre>
       *
       * <code>.onnx.OptionalProto optional_value = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxData.OptionalProto, onnx.OnnxData.OptionalProto.Builder, onnx.OnnxData.OptionalProtoOrBuilder> 
          getOptionalValueFieldBuilder() {
        if (optionalValueBuilder_ == null) {
          optionalValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxData.OptionalProto, onnx.OnnxData.OptionalProto.Builder, onnx.OnnxData.OptionalProtoOrBuilder>(
                  getOptionalValue(),
                  getParentForChildren(),
                  isClean());
          optionalValue_ = null;
        }
        return optionalValueBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:onnx.OptionalProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.OptionalProto)
    private static final onnx.OnnxData.OptionalProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxData.OptionalProto();
    }

    public static onnx.OnnxData.OptionalProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OptionalProto>
        PARSER = new com.google.protobuf.AbstractParser<OptionalProto>() {
      @java.lang.Override
      public OptionalProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OptionalProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OptionalProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OptionalProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public onnx.OnnxData.OptionalProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_SequenceProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_SequenceProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_MapProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_MapProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_OptionalProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_OptionalProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024onnx/onnx-data.proto\022\004onnx\032\017onnx/onnx." +
      "proto\"\360\002\n\rSequenceProto\022\014\n\004name\030\001 \001(\t\022\021\n" +
      "\telem_type\030\002 \001(\005\022(\n\rtensor_values\030\003 \003(\0132" +
      "\021.onnx.TensorProto\0225\n\024sparse_tensor_valu" +
      "es\030\004 \003(\0132\027.onnx.SparseTensorProto\022,\n\017seq" +
      "uence_values\030\005 \003(\0132\023.onnx.SequenceProto\022" +
      "\"\n\nmap_values\030\006 \003(\0132\016.onnx.MapProto\022,\n\017o" +
      "ptional_values\030\007 \003(\0132\023.onnx.OptionalProt" +
      "o\"]\n\010DataType\022\r\n\tUNDEFINED\020\000\022\n\n\006TENSOR\020\001" +
      "\022\021\n\rSPARSE_TENSOR\020\002\022\014\n\010SEQUENCE\020\003\022\007\n\003MAP" +
      "\020\004\022\014\n\010OPTIONAL\020\005\"r\n\010MapProto\022\014\n\004name\030\001 \001" +
      "(\t\022\020\n\010key_type\030\002 \001(\005\022\014\n\004keys\030\003 \003(\003\022\023\n\013st" +
      "ring_keys\030\004 \003(\014\022#\n\006values\030\005 \001(\0132\023.onnx.S" +
      "equenceProto\"\353\002\n\rOptionalProto\022\014\n\004name\030\001" +
      " \001(\t\022\021\n\telem_type\030\002 \001(\005\022\'\n\014tensor_value\030" +
      "\003 \001(\0132\021.onnx.TensorProto\0224\n\023sparse_tenso" +
      "r_value\030\004 \001(\0132\027.onnx.SparseTensorProto\022+" +
      "\n\016sequence_value\030\005 \001(\0132\023.onnx.SequencePr" +
      "oto\022!\n\tmap_value\030\006 \001(\0132\016.onnx.MapProto\022+" +
      "\n\016optional_value\030\007 \001(\0132\023.onnx.OptionalPr" +
      "oto\"]\n\010DataType\022\r\n\tUNDEFINED\020\000\022\n\n\006TENSOR" +
      "\020\001\022\021\n\rSPARSE_TENSOR\020\002\022\014\n\010SEQUENCE\020\003\022\007\n\003M" +
      "AP\020\004\022\014\n\010OPTIONAL\020\005B\002H\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          onnx.Onnx.getDescriptor(),
        });
    internal_static_onnx_SequenceProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_onnx_SequenceProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_SequenceProto_descriptor,
        new java.lang.String[] { "Name", "ElemType", "TensorValues", "SparseTensorValues", "SequenceValues", "MapValues", "OptionalValues", });
    internal_static_onnx_MapProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_onnx_MapProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_MapProto_descriptor,
        new java.lang.String[] { "Name", "KeyType", "Keys", "StringKeys", "Values", });
    internal_static_onnx_OptionalProto_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_onnx_OptionalProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_OptionalProto_descriptor,
        new java.lang.String[] { "Name", "ElemType", "TensorValue", "SparseTensorValue", "SequenceValue", "MapValue", "OptionalValue", });
    onnx.Onnx.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
